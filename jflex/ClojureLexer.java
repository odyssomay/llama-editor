/* The following code was generated by JFlex 1.4.3 on 7/10/11 10:04 PM */

/*
 * Copyright 2008 Ayman Al-Sairafi ayman.alsairafi@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License
 *       at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package llama;

import jsyntaxpane.DefaultLexer;
import jsyntaxpane.Token;
import jsyntaxpane.TokenType;
 

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 7/10/11 10:04 PM from the specification file
 * <tt>clojure.flex</tt>
 */
public final class ClojureLexer extends DefaultLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int STRING = 2;
  public static final int YYINITIAL = 0;
  public static final int CHARLITERAL = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2, 2
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\6\1\3\1\2\1\0\1\3\1\1\16\6\4\0\1\33\1\77"+
    "\1\23\1\0\1\5\2\0\1\24\1\27\1\103\1\63\1\22\1\0"+
    "\1\54\1\20\1\101\1\7\1\15\1\14\1\66\4\16\2\10\1\26"+
    "\1\4\1\102\1\64\1\100\1\60\1\0\3\13\1\75\1\21\1\17"+
    "\5\5\1\11\1\67\1\73\1\74\1\70\3\5\1\71\3\5\1\12"+
    "\1\72\1\5\1\106\1\25\1\107\1\0\1\5\1\0\1\43\1\61"+
    "\1\47\1\30\1\31\1\32\1\65\1\50\1\34\1\62\1\57\1\36"+
    "\1\53\1\45\1\35\1\46\1\40\1\44\1\56\1\37\1\41\1\42"+
    "\1\51\1\55\1\52\1\76\1\104\1\0\1\105\1\0\41\6\2\0"+
    "\4\5\4\0\1\5\2\0\1\6\7\0\1\5\4\0\1\5\5\0"+
    "\27\5\1\0\37\5\1\0\u013f\5\31\0\162\5\4\0\14\5\16\0"+
    "\5\5\11\0\1\5\21\0\130\6\5\0\23\6\12\0\1\5\13\0"+
    "\1\5\1\0\3\5\1\0\1\5\1\0\24\5\1\0\54\5\1\0"+
    "\46\5\1\0\5\5\4\0\202\5\1\0\4\6\3\0\105\5\1\0"+
    "\46\5\2\0\2\5\6\0\20\5\41\0\46\5\2\0\1\5\7\0"+
    "\47\5\11\0\21\6\1\0\27\6\1\0\3\6\1\0\1\6\1\0"+
    "\2\6\1\0\1\6\13\0\33\5\5\0\3\5\15\0\4\6\14\0"+
    "\6\6\13\0\32\5\5\0\13\5\16\6\7\0\12\6\4\0\2\5"+
    "\1\6\143\5\1\0\1\5\10\6\1\0\6\6\2\5\2\6\1\0"+
    "\4\6\2\5\12\6\3\5\2\0\1\5\17\0\1\6\1\5\1\6"+
    "\36\5\33\6\2\0\3\5\60\0\46\5\13\6\1\5\u014f\0\3\6"+
    "\66\5\2\0\1\6\1\5\20\6\2\0\1\5\4\6\3\0\12\5"+
    "\2\6\2\0\12\6\21\0\3\6\1\0\10\5\2\0\2\5\2\0"+
    "\26\5\1\0\7\5\1\0\1\5\3\0\4\5\2\0\1\6\1\5"+
    "\7\6\2\0\2\6\2\0\3\6\11\0\1\6\4\0\2\5\1\0"+
    "\3\5\2\6\2\0\12\6\4\5\15\0\3\6\1\0\6\5\4\0"+
    "\2\5\2\0\26\5\1\0\7\5\1\0\2\5\1\0\2\5\1\0"+
    "\2\5\2\0\1\6\1\0\5\6\4\0\2\6\2\0\3\6\13\0"+
    "\4\5\1\0\1\5\7\0\14\6\3\5\14\0\3\6\1\0\11\5"+
    "\1\0\3\5\1\0\26\5\1\0\7\5\1\0\2\5\1\0\5\5"+
    "\2\0\1\6\1\5\10\6\1\0\3\6\1\0\3\6\2\0\1\5"+
    "\17\0\2\5\2\6\2\0\12\6\1\0\1\5\17\0\3\6\1\0"+
    "\10\5\2\0\2\5\2\0\26\5\1\0\7\5\1\0\2\5\1\0"+
    "\5\5\2\0\1\6\1\5\6\6\3\0\2\6\2\0\3\6\10\0"+
    "\2\6\4\0\2\5\1\0\3\5\4\0\12\6\1\0\1\5\20\0"+
    "\1\6\1\5\1\0\6\5\3\0\3\5\1\0\4\5\3\0\2\5"+
    "\1\0\1\5\1\0\2\5\3\0\2\5\3\0\3\5\3\0\10\5"+
    "\1\0\3\5\4\0\5\6\3\0\3\6\1\0\4\6\11\0\1\6"+
    "\17\0\11\6\11\0\1\5\7\0\3\6\1\0\10\5\1\0\3\5"+
    "\1\0\27\5\1\0\12\5\1\0\5\5\4\0\7\6\1\0\3\6"+
    "\1\0\4\6\7\0\2\6\11\0\2\5\4\0\12\6\22\0\2\6"+
    "\1\0\10\5\1\0\3\5\1\0\27\5\1\0\12\5\1\0\5\5"+
    "\2\0\1\6\1\5\7\6\1\0\3\6\1\0\4\6\7\0\2\6"+
    "\7\0\1\5\1\0\2\5\4\0\12\6\22\0\2\6\1\0\10\5"+
    "\1\0\3\5\1\0\27\5\1\0\20\5\4\0\6\6\2\0\3\6"+
    "\1\0\4\6\11\0\1\6\10\0\2\5\4\0\12\6\22\0\2\6"+
    "\1\0\22\5\3\0\30\5\1\0\11\5\1\0\1\5\2\0\7\5"+
    "\3\0\1\6\4\0\6\6\1\0\1\6\1\0\10\6\22\0\2\6"+
    "\15\0\60\5\1\6\2\5\7\6\4\0\10\5\10\6\1\0\12\6"+
    "\47\0\2\5\1\0\1\5\2\0\2\5\1\0\1\5\2\0\1\5"+
    "\6\0\4\5\1\0\7\5\1\0\3\5\1\0\1\5\1\0\1\5"+
    "\2\0\2\5\1\0\4\5\1\6\2\5\6\6\1\0\2\6\1\5"+
    "\2\0\5\5\1\0\1\5\1\0\6\6\2\0\12\6\2\0\2\5"+
    "\42\0\1\5\27\0\2\6\6\0\12\6\13\0\1\6\1\0\1\6"+
    "\1\0\1\6\4\0\2\6\10\5\1\0\42\5\6\0\24\6\1\0"+
    "\2\6\4\5\4\0\10\6\1\0\44\6\11\0\1\6\71\0\42\5"+
    "\1\0\5\5\1\0\2\5\1\0\7\6\3\0\4\6\6\0\12\6"+
    "\6\0\6\5\4\6\106\0\46\5\12\0\51\5\7\0\132\5\5\0"+
    "\104\5\5\0\122\5\6\0\7\5\1\0\77\5\1\0\1\5\1\0"+
    "\4\5\2\0\7\5\1\0\1\5\1\0\4\5\2\0\47\5\1\0"+
    "\1\5\1\0\4\5\2\0\37\5\1\0\1\5\1\0\4\5\2\0"+
    "\7\5\1\0\1\5\1\0\4\5\2\0\7\5\1\0\7\5\1\0"+
    "\27\5\1\0\37\5\1\0\1\5\1\0\4\5\2\0\7\5\1\0"+
    "\47\5\1\0\23\5\16\0\11\6\56\0\125\5\14\0\u026c\5\2\0"+
    "\10\5\12\0\32\5\5\0\113\5\3\0\3\5\17\0\15\5\1\0"+
    "\4\5\3\6\13\0\22\5\3\6\13\0\22\5\2\6\14\0\15\5"+
    "\1\0\3\5\1\0\2\6\14\0\64\5\40\6\3\0\1\5\3\0"+
    "\2\5\1\6\2\0\12\6\41\0\3\6\2\0\12\6\6\0\130\5"+
    "\10\0\51\5\1\6\126\0\35\5\3\0\14\6\4\0\14\6\12\0"+
    "\12\6\36\5\2\0\5\5\u038b\0\154\5\224\0\234\5\4\0\132\5"+
    "\6\0\26\5\2\0\6\5\2\0\46\5\2\0\6\5\2\0\10\5"+
    "\1\0\1\5\1\0\1\5\1\0\1\5\1\0\37\5\2\0\65\5"+
    "\1\0\7\5\1\0\1\5\3\0\3\5\1\0\7\5\3\0\4\5"+
    "\2\0\6\5\4\0\15\5\5\0\3\5\1\0\7\5\17\0\4\6"+
    "\32\0\5\6\20\0\2\5\23\0\1\5\13\0\4\6\6\0\6\6"+
    "\1\0\1\5\15\0\1\5\40\0\22\5\36\0\15\6\4\0\1\6"+
    "\3\0\6\6\27\0\1\5\4\0\1\5\2\0\12\5\1\0\1\5"+
    "\3\0\5\5\6\0\1\5\1\0\1\5\1\0\1\5\1\0\4\5"+
    "\1\0\3\5\1\0\7\5\3\0\3\5\5\0\5\5\26\0\44\5"+
    "\u0e81\0\3\5\31\0\11\5\6\6\1\0\5\5\2\0\5\5\4\0"+
    "\126\5\2\0\2\6\2\0\3\5\1\0\137\5\5\0\50\5\4\0"+
    "\136\5\21\0\30\5\70\0\20\5\u0200\0\u19b6\5\112\0\u51a6\5\132\0"+
    "\u048d\5\u0773\0\u2ba4\5\u215c\0\u012e\5\2\0\73\5\225\0\7\5\14\0"+
    "\5\5\5\0\1\5\1\6\12\5\1\0\15\5\1\0\5\5\1\0"+
    "\1\5\1\0\2\5\1\0\2\5\1\0\154\5\41\0\u016b\5\22\0"+
    "\100\5\2\0\66\5\50\0\15\5\3\0\20\6\20\0\4\6\17\0"+
    "\2\5\30\0\3\5\31\0\1\5\6\0\5\5\1\0\207\5\2\0"+
    "\1\6\4\0\1\5\13\0\12\6\7\0\32\5\4\0\1\5\1\0"+
    "\32\5\12\0\132\5\3\0\6\5\2\0\6\5\2\0\6\5\2\0"+
    "\3\5\3\0\2\5\3\0\2\5\22\0\3\6\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\3\1\1\2\1\3\2\4\2\1\1\5\1\1"+
    "\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\1\1\14\2\16\1\1\2\2\3\4\1\0\3\4"+
    "\2\0\1\17\1\0\1\20\37\0\2\14\1\21\4\4"+
    "\1\0\1\17\1\0\1\22\175\0\1\14\2\4\275\0"+
    "\2\4\305\0\2\4\244\0\2\4\227\0\2\4\175\0"+
    "\2\4\137\0\2\4\120\0\1\4\73\0\1\4\62\0"+
    "\1\4\54\0\1\4\36\0\1\4\31\0\1\4\20\0"+
    "\1\4\13\0\1\4\4\0\1\4\3\0\1\4\2\0"+
    "\1\4\2\0\1\4\2\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[1484];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\110\0\220\0\330\0\u0120\0\u0168\0\u01b0\0\u01f8"+
    "\0\u0240\0\u0288\0\u02d0\0\u0318\0\330\0\u0360\0\u03a8\0\330"+
    "\0\330\0\330\0\330\0\330\0\u03f0\0\330\0\u0438\0\u0480"+
    "\0\u04c8\0\330\0\u0510\0\u0558\0\330\0\u05a0\0\u05e8\0\330"+
    "\0\u0630\0\u0678\0\u06c0\0\u0708\0\u0750\0\u0318\0\330\0\u0798"+
    "\0\u0360\0\u07e0\0\u0828\0\u0870\0\u08b8\0\u0900\0\u0948\0\u0990"+
    "\0\u09d8\0\u0a20\0\u0a68\0\u0ab0\0\u0af8\0\u0b40\0\u0b88\0\u0bd0"+
    "\0\u0c18\0\u0c60\0\u0ca8\0\u0cf0\0\u0d38\0\u0d80\0\u0dc8\0\u0e10"+
    "\0\u0e58\0\u0ea0\0\u0ee8\0\u0f30\0\u0f78\0\u0fc0\0\u1008\0\u1050"+
    "\0\u1098\0\u10e0\0\330\0\u1128\0\u1170\0\u11b8\0\u1200\0\u1248"+
    "\0\u0318\0\u1290\0\330\0\u12d8\0\u1320\0\u1368\0\u13b0\0\u13f8"+
    "\0\u1440\0\u1488\0\u14d0\0\u1518\0\u1560\0\u15a8\0\u15f0\0\u1638"+
    "\0\u1680\0\u16c8\0\u1710\0\u1758\0\u17a0\0\u17e8\0\u1830\0\u1878"+
    "\0\u18c0\0\u1908\0\u1950\0\u1998\0\u19e0\0\u1a28\0\u1a70\0\u1ab8"+
    "\0\u1b00\0\u1b48\0\u1b90\0\u1bd8\0\u1c20\0\u1c68\0\u1cb0\0\u1cf8"+
    "\0\u1d40\0\u1d88\0\u1dd0\0\u1e18\0\u1e60\0\u1ea8\0\u1ef0\0\u1f38"+
    "\0\u1f80\0\u1fc8\0\u2010\0\u2058\0\u20a0\0\u20e8\0\u2130\0\u2178"+
    "\0\u21c0\0\u2208\0\u2250\0\u2298\0\u22e0\0\u2328\0\u2370\0\u23b8"+
    "\0\u2400\0\u2448\0\u2490\0\u24d8\0\u2520\0\u2568\0\u25b0\0\u25f8"+
    "\0\u2640\0\u2688\0\u26d0\0\u2718\0\u2760\0\u27a8\0\u27f0\0\u2838"+
    "\0\u2880\0\u28c8\0\u2910\0\u2958\0\u29a0\0\u29e8\0\u2a30\0\u2a78"+
    "\0\u2ac0\0\u2b08\0\u2b50\0\u2b98\0\u2be0\0\u2c28\0\u2c70\0\u2cb8"+
    "\0\u2d00\0\u2d48\0\u2d90\0\u2dd8\0\u2e20\0\u2e68\0\u2eb0\0\u2ef8"+
    "\0\u2f40\0\u2f88\0\u2fd0\0\u3018\0\u3060\0\u30a8\0\u30f0\0\u3138"+
    "\0\u3180\0\u31c8\0\u3210\0\u3258\0\u32a0\0\u32e8\0\u3330\0\u3378"+
    "\0\u33c0\0\u3408\0\u3450\0\u3498\0\u34e0\0\u3528\0\u3570\0\u35b8"+
    "\0\330\0\u3600\0\u3648\0\u3690\0\u36d8\0\u3720\0\u3768\0\u37b0"+
    "\0\u37f8\0\u3840\0\u3888\0\u38d0\0\u3918\0\u3960\0\u39a8\0\u39f0"+
    "\0\u3a38\0\u3a80\0\u3ac8\0\u3b10\0\u3b58\0\u3ba0\0\u3be8\0\u3c30"+
    "\0\u3c78\0\u3cc0\0\u3d08\0\u3d50\0\u3d98\0\u3de0\0\u3e28\0\u3e70"+
    "\0\u3eb8\0\u3f00\0\u3f48\0\u3f90\0\u3fd8\0\u4020\0\u4068\0\u40b0"+
    "\0\u40f8\0\u4140\0\u4188\0\u41d0\0\u4218\0\u4260\0\u42a8\0\u42f0"+
    "\0\u4338\0\u4380\0\u43c8\0\u4410\0\u4458\0\u44a0\0\u44e8\0\u4530"+
    "\0\u4578\0\u45c0\0\u4608\0\u4650\0\u4698\0\u46e0\0\u4728\0\u4770"+
    "\0\u47b8\0\u4800\0\u4848\0\u4890\0\u48d8\0\u4920\0\u4968\0\u49b0"+
    "\0\u49f8\0\u4a40\0\u4a88\0\u4ad0\0\u4b18\0\u4b60\0\u4ba8\0\u4bf0"+
    "\0\u4c38\0\u4c80\0\u4cc8\0\u4d10\0\u4d58\0\u4da0\0\u4de8\0\u4e30"+
    "\0\u4e78\0\u4ec0\0\u4f08\0\u4f50\0\u4f98\0\u4fe0\0\u5028\0\u5070"+
    "\0\u50b8\0\u5100\0\u5148\0\u5190\0\u51d8\0\u5220\0\u5268\0\u52b0"+
    "\0\u52f8\0\u5340\0\u5388\0\u53d0\0\u5418\0\u5460\0\u54a8\0\u54f0"+
    "\0\u5538\0\u5580\0\u55c8\0\u5610\0\u5658\0\u56a0\0\u56e8\0\u5730"+
    "\0\u5778\0\u57c0\0\u5808\0\u5850\0\u5898\0\u58e0\0\u5928\0\u5970"+
    "\0\u59b8\0\u5a00\0\u5a48\0\u5a90\0\u5ad8\0\u5b20\0\u5b68\0\u5bb0"+
    "\0\u5bf8\0\u5c40\0\u5c88\0\u5cd0\0\u5d18\0\u5d60\0\u5da8\0\u5df0"+
    "\0\u5e38\0\u5e80\0\u5ec8\0\u5f10\0\u5f58\0\u5fa0\0\u5fe8\0\u6030"+
    "\0\u6078\0\u60c0\0\u6108\0\u6150\0\u6198\0\u61e0\0\u6228\0\u6270"+
    "\0\u62b8\0\u6300\0\u6348\0\u6390\0\u63d8\0\u6420\0\u6468\0\u64b0"+
    "\0\u64f8\0\u6540\0\u6588\0\u65d0\0\u6618\0\u6660\0\u66a8\0\u66f0"+
    "\0\u6738\0\u6780\0\u67c8\0\u6810\0\u6858\0\u68a0\0\u68e8\0\u6930"+
    "\0\u6978\0\u69c0\0\u6a08\0\u6a50\0\u6a98\0\u6ae0\0\u6b28\0\u6b70"+
    "\0\u6bb8\0\u6c00\0\u6c48\0\u6c90\0\u6cd8\0\u6d20\0\u6d68\0\u6db0"+
    "\0\u6df8\0\u6e40\0\u6e88\0\u6ed0\0\u6f18\0\u6f60\0\u6fa8\0\u6ff0"+
    "\0\u7038\0\u7080\0\u70c8\0\u7110\0\u7158\0\u71a0\0\u71e8\0\u7230"+
    "\0\u7278\0\u72c0\0\u7308\0\u7350\0\u7398\0\u73e0\0\u7428\0\u7470"+
    "\0\u74b8\0\u7500\0\u7548\0\u7590\0\u75d8\0\u7620\0\u7668\0\u76b0"+
    "\0\u76f8\0\u7740\0\u7788\0\u77d0\0\u7818\0\u7860\0\u78a8\0\u78f0"+
    "\0\u7938\0\u7980\0\u79c8\0\u7a10\0\u7a58\0\u7aa0\0\u7ae8\0\u7b30"+
    "\0\u7b78\0\u7bc0\0\u7c08\0\u7c50\0\u7c98\0\u7ce0\0\u7d28\0\u7d70"+
    "\0\u7db8\0\u7e00\0\u7e48\0\u7e90\0\u7ed8\0\u7f20\0\u7f68\0\u7fb0"+
    "\0\u7ff8\0\u8040\0\u8088\0\u80d0\0\u8118\0\u8160\0\u81a8\0\u81f0"+
    "\0\u8238\0\u8280\0\u82c8\0\u8310\0\u8358\0\u83a0\0\u83e8\0\u8430"+
    "\0\u8478\0\u84c0\0\u8508\0\u8550\0\u8598\0\u85e0\0\u8628\0\u8670"+
    "\0\u86b8\0\u8700\0\u8748\0\u8790\0\u87d8\0\u8820\0\u8868\0\u88b0"+
    "\0\u88f8\0\u8940\0\u8988\0\u89d0\0\u8a18\0\u8a60\0\u8aa8\0\u8af0"+
    "\0\u8b38\0\u8b80\0\u8bc8\0\u8c10\0\u8c58\0\u8ca0\0\u8ce8\0\u8d30"+
    "\0\u8d78\0\u8dc0\0\u8e08\0\u8e50\0\u8e98\0\u8ee0\0\u8f28\0\u8f70"+
    "\0\u8fb8\0\u9000\0\u9048\0\u9090\0\u90d8\0\u9120\0\u9168\0\u91b0"+
    "\0\u91f8\0\u9240\0\u9288\0\u92d0\0\u9318\0\u9360\0\u93a8\0\u93f0"+
    "\0\u9438\0\u9480\0\u94c8\0\u9510\0\u9558\0\u95a0\0\u95e8\0\u9630"+
    "\0\u9678\0\u96c0\0\u9708\0\u9750\0\u9798\0\u97e0\0\u9828\0\u9870"+
    "\0\u98b8\0\u9900\0\u9948\0\u9990\0\u99d8\0\u9a20\0\u9a68\0\u9ab0"+
    "\0\u9af8\0\u9b40\0\u9b88\0\u9bd0\0\u9c18\0\u9c60\0\u9ca8\0\u9cf0"+
    "\0\u9d38\0\u9d80\0\u9dc8\0\u9e10\0\u9e58\0\u9ea0\0\u9ee8\0\u9f30"+
    "\0\u9f78\0\u9fc0\0\ua008\0\ua050\0\ua098\0\ua0e0\0\ua128\0\ua170"+
    "\0\ua1b8\0\ua200\0\ua248\0\ua290\0\ua2d8\0\ua320\0\ua368\0\ua3b0"+
    "\0\ua3f8\0\ua440\0\ua488\0\ua4d0\0\ua518\0\ua560\0\ua5a8\0\ua5f0"+
    "\0\ua638\0\ua680\0\ua6c8\0\ua710\0\ua758\0\ua7a0\0\ua7e8\0\ua830"+
    "\0\ua878\0\ua8c0\0\ua908\0\ua950\0\ua998\0\ua9e0\0\uaa28\0\uaa70"+
    "\0\uaab8\0\uab00\0\uab48\0\uab90\0\uabd8\0\uac20\0\uac68\0\uacb0"+
    "\0\uacf8\0\uad40\0\uad88\0\uadd0\0\uae18\0\uae60\0\uaea8\0\uaef0"+
    "\0\uaf38\0\uaf80\0\uafc8\0\ub010\0\ub058\0\ub0a0\0\ub0e8\0\ub130"+
    "\0\ub178\0\ub1c0\0\ub208\0\ub250\0\ub298\0\ub2e0\0\ub328\0\ub370"+
    "\0\ub3b8\0\ub400\0\ub448\0\ub490\0\ub4d8\0\ub520\0\ub568\0\ub5b0"+
    "\0\ub5f8\0\ub640\0\ub688\0\ub6d0\0\ub718\0\ub760\0\ub7a8\0\ub7f0"+
    "\0\ub838\0\ub880\0\ub8c8\0\ub910\0\ub958\0\ub9a0\0\ub9e8\0\uba30"+
    "\0\uba78\0\ubac0\0\ubb08\0\ubb50\0\ubb98\0\ubbe0\0\ubc28\0\ubc70"+
    "\0\ubcb8\0\ubd00\0\ubd48\0\ubd90\0\ubdd8\0\ube20\0\ube68\0\ubeb0"+
    "\0\ubef8\0\ubf40\0\ubf88\0\ubfd0\0\uc018\0\uc060\0\uc0a8\0\uc0f0"+
    "\0\uc138\0\uc180\0\uc1c8\0\uc210\0\uc258\0\uc2a0\0\uc2e8\0\uc330"+
    "\0\uc378\0\uc3c0\0\uc408\0\uc450\0\uc498\0\uc4e0\0\uc528\0\uc570"+
    "\0\uc5b8\0\uc600\0\uc648\0\uc690\0\uc6d8\0\uc720\0\uc768\0\uc7b0"+
    "\0\uc7f8\0\uc840\0\uc888\0\uc8d0\0\uc918\0\uc960\0\uc9a8\0\uc9f0"+
    "\0\uca38\0\uca80\0\ucac8\0\ucb10\0\ucb58\0\ucba0\0\ucbe8\0\ucc30"+
    "\0\ucc78\0\uccc0\0\ucd08\0\ucd50\0\ucd98\0\ucde0\0\uce28\0\uce70"+
    "\0\uceb8\0\ucf00\0\ucf48\0\ucf90\0\ucfd8\0\ud020\0\ud068\0\ud0b0"+
    "\0\ud0f8\0\ud140\0\ud188\0\ud1d0\0\ud218\0\ud260\0\ud2a8\0\ud2f0"+
    "\0\ud338\0\ud380\0\ud3c8\0\ud410\0\ud458\0\ud4a0\0\ud4e8\0\ud530"+
    "\0\ud578\0\ud5c0\0\ud608\0\ud650\0\ud698\0\ud6e0\0\ud728\0\ud770"+
    "\0\ud7b8\0\ud800\0\ud848\0\ud890\0\ud8d8\0\ud920\0\ud968\0\ud9b0"+
    "\0\ud9f8\0\uda40\0\uda88\0\udad0\0\udb18\0\udb60\0\udba8\0\udbf0"+
    "\0\udc38\0\udc80\0\udcc8\0\udd10\0\udd58\0\udda0\0\udde8\0\ude30"+
    "\0\ude78\0\udec0\0\udf08\0\udf50\0\udf98\0\udfe0\0\ue028\0\ue070"+
    "\0\ue0b8\0\ue100\0\ue148\0\ue190\0\ue1d8\0\ue220\0\ue268\0\ue2b0"+
    "\0\ue2f8\0\ue340\0\ue388\0\ue3d0\0\ue418\0\ue460\0\ue4a8\0\ue4f0"+
    "\0\ue538\0\ue580\0\ue5c8\0\ue610\0\ue658\0\ue6a0\0\ue6e8\0\ue730"+
    "\0\ue778\0\ue7c0\0\ue808\0\ue850\0\ue898\0\ue8e0\0\ue928\0\ue970"+
    "\0\ue9b8\0\uea00\0\uea48\0\uea90\0\uead8\0\ueb20\0\ueb68\0\uebb0"+
    "\0\uebf8\0\uec40\0\uec88\0\uecd0\0\ued18\0\ued60\0\ueda8\0\uedf0"+
    "\0\uee38\0\uee80\0\ueec8\0\uef10\0\uef58\0\uefa0\0\uefe8\0\uf030"+
    "\0\uf078\0\uf0c0\0\uf108\0\uf150\0\uf198\0\uf1e0\0\uf228\0\uf270"+
    "\0\uf2b8\0\uf300\0\uf348\0\uf390\0\uf3d8\0\uf420\0\uf468\0\uf4b0"+
    "\0\uf4f8\0\uf540\0\uf588\0\uf5d0\0\uf618\0\uf660\0\uf6a8\0\uf6f0"+
    "\0\uf738\0\uf780\0\uf7c8\0\uf810\0\uf858\0\uf8a0\0\uf8e8\0\uf930"+
    "\0\uf978\0\uf9c0\0\ufa08\0\ufa50\0\ufa98\0\ufae0\0\ufb28\0\ufb70"+
    "\0\ufbb8\0\ufc00\0\ufc48\0\ufc90\0\ufcd8\0\ufd20\0\ufd68\0\ufdb0"+
    "\0\ufdf8\0\ufe40\0\ufe88\0\ufed0\0\uff18\0\uff60\0\uffa8\0\ufff0"+
    "\1\70\1\200\1\310\1\u0110\1\u0158\1\u01a0\1\u01e8\1\u0230"+
    "\1\u0278\1\u02c0\1\u0308\1\u0350\1\u0398\1\u03e0\1\u0428\1\u0470"+
    "\1\u04b8\1\u0500\1\u0548\1\u0590\1\u05d8\1\u0620\1\u0668\1\u06b0"+
    "\1\u06f8\1\u0740\1\u0788\1\u07d0\1\u0818\1\u0860\1\u08a8\1\u08f0"+
    "\1\u0938\1\u0980\1\u09c8\1\u0a10\1\u0a58\1\u0aa0\1\u0ae8\1\u0b30"+
    "\1\u0b78\1\u0bc0\1\u0c08\1\u0c50\1\u0c98\1\u0ce0\1\u0d28\1\u0d70"+
    "\1\u0db8\1\u0e00\1\u0e48\1\u0e90\1\u0ed8\1\u0f20\1\u0f68\1\u0fb0"+
    "\1\u0ff8\1\u1040\1\u1088\1\u10d0\1\u1118\1\u1160\1\u11a8\1\u11f0"+
    "\1\u1238\1\u1280\1\u12c8\1\u1310\1\u1358\1\u13a0\1\u13e8\1\u1430"+
    "\1\u1478\1\u14c0\1\u1508\1\u1550\1\u1598\1\u15e0\1\u1628\1\u1670"+
    "\1\u16b8\1\u1700\1\u1748\1\u1790\1\u17d8\1\u1820\1\u1868\1\u18b0"+
    "\1\u18f8\1\u1940\1\u1988\1\u19d0\1\u1a18\1\u1a60\1\u1aa8\1\u1af0"+
    "\1\u1b38\1\u1b80\1\u1bc8\1\u1c10\1\u1c58\1\u1ca0\1\u1ce8\1\u1d30"+
    "\1\u1d78\1\u1dc0\1\u1e08\1\u1e50\1\u1e98\1\u1ee0\1\u1f28\1\u1f70"+
    "\1\u1fb8\1\u2000\1\u2048\1\u2090\1\u20d8\1\u2120\1\u2168\1\u21b0"+
    "\1\u21f8\1\u2240\1\u2288\1\u22d0\1\u2318\1\u2360\1\u23a8\1\u23f0"+
    "\1\u2438\1\u2480\1\u24c8\1\u2510\1\u2558\1\u25a0\1\u25e8\1\u2630"+
    "\1\u2678\1\u26c0\1\u2708\1\u2750\1\u2798\1\u27e0\1\u2828\1\u2870"+
    "\1\u28b8\1\u2900\1\u2948\1\u2990\1\u29d8\1\u2a20\1\u2a68\1\u2ab0"+
    "\1\u2af8\1\u2b40\1\u2b88\1\u2bd0\1\u2c18\1\u2c60\1\u2ca8\1\u2cf0"+
    "\1\u2d38\1\u2d80\1\u2dc8\1\u2e10\1\u2e58\1\u2ea0\1\u2ee8\1\u2f30"+
    "\1\u2f78\1\u2fc0\1\u3008\1\u3050\1\u3098\1\u30e0\1\u3128\1\u3170"+
    "\1\u31b8\1\u3200\1\u3248\1\u3290\1\u32d8\1\u3320\1\u3368\1\u33b0"+
    "\1\u33f8\1\u3440\1\u3488\1\u34d0\1\u3518\1\u3560\1\u35a8\1\u35f0"+
    "\1\u3638\1\u3680\1\u36c8\1\u3710\1\u3758\1\u37a0\1\u37e8\1\u3830"+
    "\1\u3878\1\u38c0\1\u3908\1\u3950\1\u3998\1\u39e0\1\u3a28\1\u3a70"+
    "\1\u3ab8\1\u3b00\1\u3b48\1\u3b90\1\u3bd8\1\u3c20\1\u3c68\1\u3cb0"+
    "\1\u3cf8\1\u3d40\1\u3d88\1\u3dd0\1\u3e18\1\u3e60\1\u3ea8\1\u3ef0"+
    "\1\u3f38\1\u3f80\1\u3fc8\1\u4010\1\u4058\1\u40a0\1\u40e8\1\u4130"+
    "\1\u4178\1\u41c0\1\u4208\1\u4250\1\u4298\1\u42e0\1\u4328\1\u4370"+
    "\1\u43b8\1\u4400\1\u4448\1\u4490\1\u44d8\1\u4520\1\u4568\1\u45b0"+
    "\1\u45f8\1\u4640\1\u4688\1\u46d0\1\u4718\1\u4760\1\u47a8\1\u47f0"+
    "\1\u4838\1\u4880\1\u48c8\1\u4910\1\u4958\1\u49a0\1\u49e8\1\u4a30"+
    "\1\u4a78\1\u4ac0\1\u4b08\1\u4b50\1\u4b98\1\u4be0\1\u4c28\1\u4c70"+
    "\1\u4cb8\1\u4d00\1\u4d48\1\u4d90\1\u4dd8\1\u4e20\1\u4e68\1\u4eb0"+
    "\1\u4ef8\1\u4f40\1\u4f88\1\u4fd0\1\u5018\1\u5060\1\u50a8\1\u50f0"+
    "\1\u5138\1\u5180\1\u51c8\1\u5210\1\u5258\1\u52a0\1\u52e8\1\u5330"+
    "\1\u5378\1\u53c0\1\u5408\1\u5450\1\u5498\1\u54e0\1\u5528\1\u5570"+
    "\1\u55b8\1\u5600\1\u5648\1\u5690\1\u56d8\1\u5720\1\u5768\1\u57b0"+
    "\1\u57f8\1\u5840\1\u5888\1\u58d0\1\u5918\1\u5960\1\u59a8\1\u59f0"+
    "\1\u5a38\1\u5a80\1\u5ac8\1\u5b10\1\u5b58\1\u5ba0\1\u5be8\1\u5c30"+
    "\1\u5c78\1\u5cc0\1\u5d08\1\u5d50\1\u5d98\1\u5de0\1\u5e28\1\u5e70"+
    "\1\u5eb8\1\u5f00\1\u5f48\1\u5f90\1\u5fd8\1\u6020\1\u6068\1\u60b0"+
    "\1\u60f8\1\u6140\1\u6188\1\u61d0\1\u6218\1\u6260\1\u62a8\1\u62f0"+
    "\1\u6338\1\u6380\1\u63c8\1\u6410\1\u6458\1\u64a0\1\u64e8\1\u6530"+
    "\1\u6578\1\u65c0\1\u6608\1\u6650\1\u6698\1\u66e0\1\u6728\1\u6770"+
    "\1\u67b8\1\u6800\1\u6848\1\u6890\1\u68d8\1\u6920\1\u6968\1\u69b0"+
    "\1\u69f8\1\u6a40\1\u6a88\1\u6ad0\1\u6b18\1\u6b60\1\u6ba8\1\u6bf0"+
    "\1\u6c38\1\u6c80\1\u6cc8\1\u6d10\1\u6d58\1\u6da0\1\u6de8\1\u6e30"+
    "\1\u6e78\1\u6ec0\1\u6f08\1\u6f50\1\u6f98\1\u6fe0\1\u7028\1\u7070"+
    "\1\u70b8\1\u7100\1\u7148\1\u7190\1\u71d8\1\u7220\1\u7268\1\u72b0"+
    "\1\u72f8\1\u7340\1\u7388\1\u73d0\1\u7418\1\u7460\1\u74a8\1\u74f0"+
    "\1\u7538\1\u7580\1\u75c8\1\u7610\1\u7658\1\u76a0\1\u76e8\1\u7730"+
    "\1\u7778\1\u77c0\1\u7808\1\u7850\1\u7898\1\u78e0\1\u7928\1\u7970"+
    "\1\u79b8\1\u7a00\1\u7a48\1\u7a90\1\u7ad8\1\u7b20\1\u7b68\1\u7bb0"+
    "\1\u7bf8\1\u7c40\1\u7c88\1\u7cd0\1\u7d18\1\u7d60\1\u7da8\1\u7df0"+
    "\1\u7e38\1\u7e80\1\u7ec8\1\u7f10\1\u7f58\1\u7fa0\1\u7fe8\1\u8030"+
    "\1\u8078\1\u80c0\1\u8108\1\u8150\1\u8198\1\u81e0\1\u8228\1\u8270"+
    "\1\u82b8\1\u8300\1\u8348\1\u8390\1\u83d8\1\u8420\1\u8468\1\u84b0"+
    "\1\u84f8\1\u8540\1\u8588\1\u85d0\1\u8618\1\u8660\1\u86a8\1\u86f0"+
    "\1\u8738\1\u8780\1\u87c8\1\u8810\1\u8858\1\u88a0\1\u88e8\1\u8930"+
    "\1\u8978\1\u89c0\1\u8a08\1\u8a50\1\u8a98\1\u8ae0\1\u8b28\1\u8b70"+
    "\1\u8bb8\1\u8c00\1\u8c48\1\u8c90\1\u8cd8\1\u8d20\1\u8d68\1\u8db0"+
    "\1\u8df8\1\u8e40\1\u8e88\1\u8ed0\1\u8f18\1\u8f60\1\u8fa8\1\u8ff0"+
    "\1\u9038\1\u9080\1\u90c8\1\u9110\1\u9158\1\u91a0\1\u91e8\1\u9230"+
    "\1\u9278\1\u92c0\1\u9308\1\u9350\1\u9398\1\u93e0\1\u9428\1\u9470"+
    "\1\u94b8\1\u9500\1\u9548\1\u9590\1\u95d8\1\u9620\1\u9668\1\u96b0"+
    "\1\u96f8\1\u9740\1\u9788\1\u97d0\1\u9818\1\u9860\1\u98a8\1\u98f0"+
    "\1\u9938\1\u9980\1\u99c8\1\u9a10\1\u9a58\1\u9aa0\1\u9ae8\1\u9b30"+
    "\1\u9b78\1\u9bc0\1\u9c08\1\u9c50";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1484];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\1\5\1\4\1\6\1\7\1\10\1\4\1\11"+
    "\1\12\3\10\3\12\1\10\1\13\1\10\1\4\1\14"+
    "\1\15\1\4\1\16\1\17\3\10\1\6\20\10\1\4"+
    "\3\10\1\4\2\10\2\4\1\10\1\12\10\10\4\4"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\2\4\20\25"+
    "\1\26\1\25\1\27\62\25\1\30\1\31\1\32\21\30"+
    "\1\26\1\33\62\30\112\0\1\4\110\0\1\6\27\0"+
    "\1\6\54\0\1\7\1\34\1\35\105\7\5\0\13\10"+
    "\1\0\1\10\6\0\3\10\1\0\20\10\1\0\3\10"+
    "\1\0\2\10\2\0\12\10\20\0\1\36\1\37\1\40"+
    "\1\41\1\0\1\42\1\43\1\42\1\40\1\44\1\45"+
    "\6\0\1\40\1\45\1\40\3\0\1\40\16\0\1\41"+
    "\10\0\1\42\6\0\1\40\21\0\2\12\1\40\2\0"+
    "\3\12\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\12\6\0\1\40\21\0\2\44"+
    "\3\0\3\44\47\0\1\44\21\0\23\46\1\47\1\46"+
    "\1\50\62\46\5\0\1\51\3\0\3\51\3\0\1\51"+
    "\1\0\1\51\6\0\3\51\1\0\20\51\1\0\3\51"+
    "\1\0\2\51\2\0\1\51\1\0\10\51\31\0\1\52"+
    "\1\53\1\54\5\0\1\55\1\56\1\57\1\0\1\60"+
    "\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70"+
    "\1\71\1\72\1\73\1\74\1\75\1\0\1\76\1\77"+
    "\1\100\1\101\1\102\1\0\1\103\1\104\1\105\1\106"+
    "\1\107\10\0\1\110\1\0\1\106\1\54\1\106\5\0"+
    "\1\25\2\0\20\25\1\0\1\25\1\0\62\25\7\0"+
    "\1\111\4\0\2\111\1\112\47\0\1\111\21\0\1\30"+
    "\2\0\21\30\2\0\62\30\2\0\1\32\105\0\2\113"+
    "\1\0\105\113\2\0\1\35\114\0\1\36\1\37\1\40"+
    "\2\0\1\42\1\43\1\42\1\40\1\44\1\45\6\0"+
    "\1\40\1\45\1\40\3\0\1\40\27\0\1\42\6\0"+
    "\1\40\21\0\2\37\3\0\3\37\1\40\1\44\1\45"+
    "\6\0\1\40\1\45\1\40\33\0\1\37\6\0\1\40"+
    "\21\0\1\114\1\115\2\0\5\115\1\0\1\115\6\0"+
    "\3\115\10\0\1\115\3\0\1\115\11\0\1\115\4\0"+
    "\1\115\6\0\1\115\21\0\1\116\1\37\1\40\2\0"+
    "\3\116\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\116\6\0\1\40\21\0\1\42"+
    "\1\37\1\40\2\0\3\42\1\40\1\44\1\45\6\0"+
    "\1\40\1\45\1\40\3\0\1\40\27\0\1\42\6\0"+
    "\1\40\21\0\2\44\3\0\3\44\1\40\1\0\1\45"+
    "\6\0\1\40\1\45\1\40\33\0\1\44\6\0\1\40"+
    "\21\0\2\117\3\0\3\117\3\0\1\120\31\0\1\120"+
    "\11\0\1\117\21\0\23\46\1\121\1\46\1\50\62\46"+
    "\20\0\1\54\156\0\1\122\53\0\1\123\105\0\1\124"+
    "\2\0\1\125\1\126\6\0\1\127\105\0\1\130\1\0"+
    "\1\131\1\132\5\0\1\133\1\0\1\134\64\0\1\135"+
    "\1\0\1\136\1\137\1\140\2\0\1\141\1\0\1\142"+
    "\1\143\1\144\72\0\1\145\1\0\1\146\2\0\1\147"+
    "\1\0\1\150\5\0\1\151\5\0\1\152\2\0\1\153"+
    "\61\0\1\154\13\0\1\54\14\0\1\155\57\0\1\156"+
    "\2\0\1\157\1\160\5\0\1\161\75\0\1\162\2\0"+
    "\1\163\1\164\5\0\1\165\1\166\3\0\1\167\1\0"+
    "\1\170\76\0\1\171\113\0\1\172\1\173\7\0\1\174"+
    "\62\0\1\175\11\0\1\176\74\0\1\177\5\0\1\200"+
    "\1\201\4\0\1\202\1\203\1\204\1\205\1\0\1\206"+
    "\1\0\1\207\2\0\1\210\6\0\1\211\53\0\1\212"+
    "\11\0\1\213\12\0\1\214\62\0\1\215\1\135\1\0"+
    "\1\216\1\217\1\0\1\220\1\0\1\221\1\0\1\222"+
    "\1\0\1\223\10\0\1\224\62\0\1\225\3\0\1\226"+
    "\3\0\1\227\1\230\1\231\1\232\2\0\1\233\3\0"+
    "\1\207\71\0\1\234\1\235\4\0\1\236\1\237\3\0"+
    "\1\240\1\0\1\241\100\0\1\242\100\0\1\243\13\0"+
    "\1\244\70\0\1\245\2\0\1\246\1\247\3\0\1\250"+
    "\1\0\1\251\77\0\1\123\10\0\1\252\2\0\1\253"+
    "\30\0\1\254\62\0\1\255\65\0\1\256\3\0\1\257"+
    "\1\260\1\261\1\0\1\262\1\0\1\263\2\0\1\264"+
    "\1\0\1\265\1\266\1\267\66\0\1\270\107\0\1\271"+
    "\2\0\1\272\1\273\3\0\1\274\1\0\1\275\6\0"+
    "\1\276\76\0\1\277\62\0\2\54\13\0\1\300\1\301"+
    "\1\123\1\302\1\303\3\0\1\304\1\0\1\305\1\306"+
    "\1\307\1\310\1\311\1\0\1\312\1\0\1\313\2\0"+
    "\1\314\7\0\1\54\54\0\1\123\30\0\1\54\54\0"+
    "\1\315\12\0\1\316\74\0\1\317\2\0\1\320\62\0"+
    "\1\112\4\0\3\112\47\0\1\112\30\0\1\321\4\0"+
    "\3\321\47\0\1\321\30\0\1\114\1\115\1\40\1\0"+
    "\5\115\1\0\1\115\6\0\3\115\3\0\1\40\4\0"+
    "\1\115\3\0\1\115\11\0\1\115\4\0\1\115\6\0"+
    "\1\115\21\0\2\322\1\40\1\0\5\322\1\0\1\322"+
    "\6\0\3\322\3\0\1\40\4\0\1\322\3\0\1\322"+
    "\11\0\1\322\4\0\1\322\6\0\1\322\21\0\1\323"+
    "\1\37\1\40\2\0\3\323\1\40\1\44\1\45\6\0"+
    "\1\40\1\45\1\40\3\0\1\40\27\0\1\323\6\0"+
    "\1\40\21\0\2\117\3\0\3\117\1\40\10\0\1\40"+
    "\1\0\1\40\33\0\1\117\6\0\1\40\21\0\2\117"+
    "\3\0\3\117\47\0\1\117\111\0\1\324\51\0\1\325"+
    "\3\0\1\326\5\0\1\327\1\330\1\0\1\331\6\0"+
    "\1\332\107\0\1\333\64\0\1\123\3\0\1\334\1\0"+
    "\1\335\1\0\1\336\1\337\2\0\1\54\6\0\1\340"+
    "\66\0\1\341\103\0\1\342\11\0\1\343\110\0\1\344"+
    "\104\0\1\345\14\0\1\346\77\0\1\347\100\0\1\350"+
    "\104\0\1\351\111\0\1\352\5\0\1\162\1\353\106\0"+
    "\1\354\100\0\1\355\3\0\1\356\1\0\1\357\103\0"+
    "\1\360\106\0\1\361\102\0\1\362\107\0\1\277\1\0"+
    "\1\123\1\343\23\0\1\54\60\0\1\363\111\0\1\123"+
    "\11\0\1\364\6\0\1\365\132\0\1\54\41\0\1\366"+
    "\112\0\1\367\2\0\1\370\7\0\1\54\4\0\1\371"+
    "\1\0\1\372\77\0\1\373\104\0\1\364\74\0\1\364"+
    "\141\0\1\374\64\0\1\375\115\0\1\376\10\0\1\377"+
    "\66\0\1\u0100\5\0\1\u0101\1\0\1\u0102\1\0\1\u0103"+
    "\116\0\1\u0104\17\0\1\u0105\67\0\1\u0104\104\0\1\174"+
    "\110\0\1\u0106\112\0\1\u0107\61\0\1\376\7\0\1\u0108"+
    "\1\0\1\u0109\6\0\1\54\66\0\1\u010a\12\0\1\u010b"+
    "\111\0\1\174\76\0\1\u010c\102\0\1\u010d\7\0\1\u010e"+
    "\6\0\1\u010f\70\0\1\u0110\110\0\1\54\125\0\1\u0111"+
    "\76\0\1\u0112\5\0\1\u0113\73\0\1\u0114\110\0\1\u0115"+
    "\2\0\1\u0116\1\0\1\u010a\1\u0117\105\0\1\u0118\103\0"+
    "\1\u0119\12\0\1\u011a\73\0\1\54\16\0\1\u011b\106\0"+
    "\1\u011c\77\0\1\u011d\10\0\1\u011e\103\0\1\u011f\107\0"+
    "\1\u0100\75\0\1\u0120\24\0\1\u0121\62\0\1\u0122\106\0"+
    "\1\u0123\1\0\1\u0124\1\0\1\u0125\1\0\1\u0126\1\0"+
    "\1\u0127\1\0\1\u0128\1\u0129\2\0\1\u012a\1\u012b\3\0"+
    "\1\u012c\1\u012d\1\0\1\u012e\70\0\1\u012f\5\0\1\u0130"+
    "\73\0\1\u0131\7\0\1\u0132\117\0\1\u0133\3\0\1\u0104"+
    "\7\0\1\364\60\0\1\364\110\0\1\u0134\120\0\1\u0135"+
    "\112\0\1\u0136\107\0\1\u0137\65\0\1\277\111\0\1\123"+
    "\20\0\1\u0138\64\0\1\u0139\12\0\1\u013a\111\0\1\u013b"+
    "\7\0\1\364\107\0\1\u013c\74\0\1\u013d\110\0\1\u013e"+
    "\74\0\1\u013f\1\0\1\123\1\u0140\1\u0141\7\0\1\u0142"+
    "\6\0\1\u0143\76\0\1\u0144\102\0\1\216\2\0\1\u0145"+
    "\3\0\1\u0146\5\0\1\u0147\65\0\1\u0148\3\0\1\u0149"+
    "\5\0\1\u014a\122\0\1\u014b\62\0\1\u014c\117\0\1\u014d"+
    "\1\0\1\u014e\113\0\1\u014f\116\0\1\u0150\70\0\1\u0151"+
    "\101\0\1\u0152\2\0\1\u014f\112\0\1\u0153\4\0\1\u0154"+
    "\6\0\1\u0155\101\0\1\u0156\72\0\1\54\14\0\1\u0157"+
    "\107\0\1\u0158\110\0\1\u0159\1\u015a\5\0\1\u0156\1\0"+
    "\1\u015b\61\0\1\u015c\121\0\1\u015d\77\0\1\123\44\0"+
    "\1\54\45\0\1\u015e\107\0\1\u015f\1\u0160\1\u0161\4\0"+
    "\1\u0162\1\0\1\u0163\104\0\1\u0164\6\0\1\174\75\0"+
    "\1\u0165\112\0\1\u0166\111\0\1\u0167\12\0\1\u0168\65\0"+
    "\1\u0169\101\0\1\u016a\2\0\1\u0104\1\0\1\u016b\106\0"+
    "\1\u016c\3\0\1\u016d\111\0\1\u016e\111\0\1\u016f\5\0"+
    "\1\u0170\65\0\1\u0171\20\0\1\u0172\100\0\1\u0173\103\0"+
    "\1\u0174\5\0\1\u0175\17\0\1\u0176\57\0\1\u0177\3\0"+
    "\1\u0178\105\0\1\u0179\126\0\1\u017a\70\0\1\u017b\125\0"+
    "\1\u0104\65\0\1\123\10\0\1\u017c\77\0\1\u017d\1\0"+
    "\1\u017e\116\0\1\u017f\103\0\1\u0180\124\0\1\u0181\67\0"+
    "\1\u0182\17\0\1\u0183\6\0\1\u0184\53\0\1\u0185\134\0"+
    "\1\u017f\75\0\1\u0186\100\0\1\u0187\1\u0188\114\0\1\u0189"+
    "\107\0\1\u018a\101\0\1\u018b\111\0\1\u018c\5\0\1\u018d"+
    "\77\0\1\u018e\116\0\1\u018f\111\0\1\u0190\50\0\2\u0191"+
    "\1\40\1\0\5\u0191\1\0\1\u0191\6\0\3\u0191\3\0"+
    "\1\40\4\0\1\u0191\3\0\1\u0191\11\0\1\u0191\4\0"+
    "\1\u0191\6\0\1\u0191\21\0\1\u0192\1\37\1\40\2\0"+
    "\3\u0192\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\u0192\6\0\1\40\103\0\1\u0193"+
    "\51\0\1\123\1\u0194\1\u0195\1\0\1\u0196\4\0\1\u0197"+
    "\1\u0198\1\u0199\4\0\1\u019a\2\0\1\u019b\65\0\1\u019c"+
    "\6\0\1\u019d\75\0\1\u019e\2\0\1\u019f\110\0\1\u01a0"+
    "\105\0\1\123\1\u01a1\1\0\1\u01a2\110\0\1\u01a3\7\0"+
    "\1\u01a4\77\0\1\u01a5\16\0\1\u01a6\3\0\1\u01a7\61\0"+
    "\1\u01a8\1\54\133\0\1\u01a9\64\0\1\343\112\0\1\u0173"+
    "\77\0\1\u0131\20\0\1\u01aa\103\0\1\u01ab\105\0\1\u01ac"+
    "\1\364\100\0\1\54\106\0\1\u01ad\125\0\1\u01ae\75\0"+
    "\1\u01af\105\0\1\u019d\101\0\1\u01b0\122\0\1\162\74\0"+
    "\1\u015e\5\0\1\u01b1\100\0\1\u01b2\112\0\1\123\13\0"+
    "\1\174\3\0\1\u01b3\77\0\1\u01b4\122\0\1\u01b5\70\0"+
    "\1\u01b6\111\0\1\u01b7\124\0\1\u0108\71\0\1\u01b8\114\0"+
    "\1\u01b9\122\0\1\54\65\0\1\u01ba\6\0\1\u01bb\106\0"+
    "\1\u01bc\102\0\1\u01bd\101\0\1\u01be\1\0\1\123\1\0"+
    "\1\u01bf\16\0\1\u01c0\1\0\1\54\76\0\1\u01c1\101\0"+
    "\1\u01c2\105\0\1\u01c3\103\0\1\u01c4\110\0\1\u0173\1\123"+
    "\105\0\1\u015e\115\0\1\u01c5\116\0\1\54\71\0\1\u01c6"+
    "\144\0\1\u01c7\101\0\1\u01c8\67\0\1\54\122\0\1\u01c9"+
    "\100\0\1\u01ca\75\0\1\u01cb\107\0\1\364\123\0\1\u01cc"+
    "\5\0\1\u01cd\110\0\1\371\64\0\1\u01ce\3\0\1\u01cf"+
    "\111\0\1\u01d0\101\0\1\u01d1\117\0\1\u01d2\116\0\1\u01d3"+
    "\102\0\1\u01d4\77\0\1\123\3\0\1\u01d5\103\0\1\123"+
    "\22\0\1\54\64\0\1\123\16\0\1\u01d6\1\0\1\u01d7"+
    "\3\0\1\54\103\0\1\u01d8\100\0\1\u01d9\105\0\1\u01c1"+
    "\75\0\1\u01da\131\0\1\54\64\0\1\u01db\122\0\1\u01dc"+
    "\75\0\1\u01dd\114\0\1\u01de\106\0\1\u01df\103\0\1\u01e0"+
    "\112\0\1\u01e1\112\0\1\u01e2\101\0\1\u01c3\3\0\1\u01e3"+
    "\111\0\1\54\5\0\1\u01e4\103\0\1\u01e5\77\0\1\u01e6"+
    "\1\0\1\123\20\0\1\u01e7\65\0\1\u01de\106\0\1\u01e8"+
    "\117\0\1\u01e9\77\0\1\u01ea\106\0\1\u01eb\110\0\1\u01ec"+
    "\4\0\1\u01ed\112\0\1\u01ee\101\0\1\123\1\0\1\u01ef"+
    "\104\0\1\u01f0\13\0\1\u01f1\4\0\1\u01f2\2\0\1\u01f3"+
    "\6\0\1\u01f4\53\0\1\u01f5\3\0\1\u01f6\1\0\1\u01f7"+
    "\1\0\1\u01f8\102\0\1\u01f9\103\0\1\u01fa\34\0\1\174"+
    "\62\0\1\54\130\0\1\u01fb\64\0\1\u01fc\104\0\1\123"+
    "\20\0\1\u01fd\7\0\1\54\56\0\1\123\11\0\1\223"+
    "\73\0\1\u01fe\1\0\1\123\25\0\1\u01ff\57\0\1\u0200"+
    "\112\0\1\u0201\4\0\1\u0202\1\0\1\u0203\1\u0204\1\u0205"+
    "\1\u0206\4\0\1\207\113\0\1\54\106\0\1\u0207\64\0"+
    "\1\123\20\0\1\u0208\22\0\1\54\60\0\1\u0209\75\0"+
    "\1\u020a\102\0\1\u020b\5\0\1\u020c\102\0\1\u020d\122\0"+
    "\1\u020e\5\0\1\u020f\107\0\1\u0210\1\0\1\u0211\65\0"+
    "\1\123\20\0\1\u0143\111\0\1\u0212\67\0\1\u0213\116\0"+
    "\1\u0214\72\0\1\u0215\6\0\1\u0216\7\0\1\u01b3\6\0"+
    "\1\u0217\3\0\1\u01a7\73\0\1\u0218\4\0\1\u0219\77\0"+
    "\1\u021a\126\0\1\u021b\103\0\1\u021c\62\0\1\54\5\0"+
    "\1\54\113\0\1\u021d\111\0\1\u021e\106\0\1\u021f\101\0"+
    "\1\174\121\0\1\u0220\107\0\1\u0221\104\0\1\u0222\105\0"+
    "\1\54\4\0\1\u0223\124\0\1\u0224\54\0\1\u0173\2\0"+
    "\1\u0225\105\0\1\123\20\0\1\u0226\67\0\1\u0227\140\0"+
    "\1\174\55\0\1\123\13\0\1\u01b3\4\0\1\u0228\3\0"+
    "\1\54\73\0\1\u0229\74\0\1\u022a\134\0\1\u022b\100\0"+
    "\1\u022c\114\0\1\u01fb\64\0\1\u022d\111\0\1\123\20\0"+
    "\1\u022e\3\0\1\54\62\0\1\123\5\0\1\u022f\16\0"+
    "\1\54\57\0\1\u0230\114\0\1\u0231\111\0\1\u0232\114\0"+
    "\1\u0100\76\0\1\123\1\u0233\4\0\1\u0234\77\0\1\u0235"+
    "\120\0\1\u0236\13\0\1\u0237\65\0\1\u0238\122\0\1\u0239"+
    "\74\0\1\u023a\117\0\1\u023b\75\0\1\u023c\4\0\1\u023d"+
    "\116\0\1\147\100\0\1\u023e\7\0\1\54\121\0\1\u023f"+
    "\74\0\1\u0240\74\0\1\123\15\0\1\u0241\4\0\1\54"+
    "\76\0\1\54\116\0\1\u0242\63\0\1\u01c8\107\0\1\u0236"+
    "\3\0\1\u0243\111\0\1\u0244\116\0\1\u0245\100\0\1\u0246"+
    "\102\0\1\u01c1\107\0\1\u01c7\122\0\1\u017f\101\0\1\u0247"+
    "\112\0\1\u0248\131\0\1\54\63\0\1\u017f\101\0\1\u0249"+
    "\114\0\1\u024a\127\0\1\u024b\62\0\1\u024c\121\0\1\u024d"+
    "\100\0\1\u024e\126\0\1\u024f\71\0\1\u0250\116\0\1\u0251"+
    "\102\0\1\u0252\111\0\1\u0253\101\0\1\123\20\0\1\u0254"+
    "\107\0\1\u0255\1\0\1\u0256\72\0\1\u0257\103\0\1\364"+
    "\125\0\1\207\43\0\2\u0258\1\40\1\0\5\u0258\1\0"+
    "\1\u0258\6\0\3\u0258\3\0\1\40\4\0\1\u0258\3\0"+
    "\1\u0258\11\0\1\u0258\4\0\1\u0258\6\0\1\u0258\21\0"+
    "\1\u0259\1\37\1\40\2\0\3\u0259\1\40\1\44\1\45"+
    "\6\0\1\40\1\45\1\40\3\0\1\40\27\0\1\u0259"+
    "\6\0\1\40\104\0\1\u025a\62\0\1\u025b\107\0\1\u025c"+
    "\114\0\1\170\66\0\1\u025d\111\0\1\123\20\0\1\54"+
    "\77\0\1\u025e\74\0\1\u025f\7\0\1\u0260\1\0\1\u0261"+
    "\103\0\1\u0262\112\0\1\u01b1\117\0\1\u0263\67\0\1\54"+
    "\117\0\1\174\120\0\1\u0264\107\0\1\u0265\77\0\1\u01af"+
    "\110\0\1\u0266\74\0\1\u0267\112\0\1\u0268\110\0\1\u0269"+
    "\105\0\1\123\43\0\1\54\63\0\1\u017a\72\0\1\u017b"+
    "\116\0\1\u026a\75\0\1\123\20\0\1\u026b\105\0\1\364"+
    "\101\0\1\u026c\74\0\1\u026d\122\0\1\174\110\0\1\u026e"+
    "\73\0\1\u01ee\111\0\1\123\20\0\1\u026f\76\0\1\u0104"+
    "\103\0\1\u0270\120\0\1\54\76\0\1\u0271\114\0\1\u0272"+
    "\104\0\1\u0273\105\0\1\u0274\101\0\1\u0104\113\0\1\u0104"+
    "\115\0\1\u0275\120\0\1\u0276\77\0\1\u0277\20\0\1\u01ff"+
    "\55\0\1\123\20\0\1\u01c0\76\0\1\u0278\122\0\1\54"+
    "\74\0\1\u0279\110\0\1\u0104\112\0\1\u027a\73\0\1\123"+
    "\24\0\1\54\2\0\1\54\55\0\1\u027b\1\0\1\123"+
    "\20\0\1\u027c\66\0\1\123\20\0\1\u01c0\1\0\1\54"+
    "\65\0\1\u027d\127\0\1\u027e\77\0\1\u027f\76\0\1\123"+
    "\20\0\1\u0280\111\0\1\u0281\77\0\1\u0282\104\0\1\u0283"+
    "\115\0\1\54\67\0\1\54\1\0\1\123\120\0\1\u0284"+
    "\100\0\1\u0285\103\0\1\u0286\115\0\1\u0287\105\0\1\u0288"+
    "\126\0\1\u0289\111\0\1\u01ba\6\0\1\u01ba\71\0\1\u028a"+
    "\1\0\1\u028b\123\0\1\u028c\66\0\1\u028d\104\0\1\u025c"+
    "\120\0\1\u028e\113\0\1\u028f\103\0\1\54\102\0\1\174"+
    "\120\0\1\u0290\70\0\1\u0291\103\0\1\123\20\0\1\u0292"+
    "\102\0\1\u0293\77\0\1\u0294\117\0\1\u0295\104\0\1\u0296"+
    "\113\0\1\u0297\2\0\1\u0298\2\0\1\u01ba\74\0\1\u0299"+
    "\100\0\1\u01af\117\0\1\u029a\76\0\1\123\20\0\1\u029b"+
    "\76\0\1\u029c\100\0\1\u029d\6\0\1\u025c\110\0\1\54"+
    "\105\0\1\u029e\101\0\1\u0231\116\0\1\u029f\107\0\1\u02a0"+
    "\75\0\1\u0131\122\0\1\u02a1\102\0\1\u02a2\106\0\1\u019f"+
    "\104\0\1\123\7\0\1\u02a3\102\0\1\u02a4\106\0\1\u02a5"+
    "\105\0\1\123\20\0\1\u02a6\111\0\1\u01f3\65\0\1\u01df"+
    "\104\0\1\u02a7\11\0\1\u02a8\110\0\1\u02a9\74\0\1\u02aa"+
    "\111\0\1\123\22\0\1\u02ab\76\0\1\u02ac\5\0\1\u02ad"+
    "\101\0\1\u02ae\100\0\1\u02af\102\0\1\u02b0\121\0\1\163"+
    "\105\0\1\u02b1\102\0\1\u02b2\112\0\1\u02b3\124\0\1\u0208"+
    "\74\0\1\u017a\113\0\1\u02b4\76\0\1\u02b5\104\0\1\u02b6"+
    "\115\0\1\u02b7\104\0\1\u02b8\107\0\1\u02b9\125\0\1\u02ba"+
    "\74\0\1\u01ee\106\0\1\u01c1\110\0\1\u02bb\103\0\1\123"+
    "\12\0\1\54\104\0\1\u02bc\77\0\1\123\3\0\1\u02bd"+
    "\103\0\1\123\1\u014f\1\0\1\u02be\4\0\1\u02bf\75\0"+
    "\1\u0243\7\0\1\u02c0\112\0\1\u02c1\104\0\1\u02c2\124\0"+
    "\1\u0263\70\0\1\u02c3\127\0\1\u02c4\63\0\1\123\20\0"+
    "\1\u02c5\1\0\1\54\1\0\1\54\62\0\1\123\20\0"+
    "\1\u02c6\107\0\1\u02c7\66\0\1\123\20\0\1\u02c8\70\0"+
    "\1\u02c9\103\0\1\u02ca\112\0\1\u02cb\132\0\1\u02cc\67\0"+
    "\1\u02cd\104\0\1\u02ce\110\0\1\u02cf\126\0\1\u02d0\64\0"+
    "\1\u02d1\126\0\1\u02d2\106\0\1\u02d3\71\0\1\u02d4\10\0"+
    "\1\u02d5\76\0\1\u02d6\111\0\1\123\20\0\1\u02d7\100\0"+
    "\1\u02d8\73\0\1\u02d9\1\0\1\123\20\0\1\u02da\100\0"+
    "\1\u02db\111\0\1\u02dc\104\0\1\u01c1\74\0\1\u026a\107\0"+
    "\1\u0131\1\0\1\123\132\0\1\u02dd\65\0\1\u02de\112\0"+
    "\1\u02df\107\0\1\u01c7\102\0\1\u014f\105\0\1\u02e0\122\0"+
    "\1\u02e1\101\0\1\u02e2\105\0\1\123\20\0\1\u0228\70\0"+
    "\1\u02e3\104\0\1\u02e4\2\0\1\u01ee\1\0\1\u02e5\3\0"+
    "\1\u02e6\1\0\1\u01bb\1\0\1\u02e7\5\0\1\u02e8\1\u02e9"+
    "\76\0\1\u0104\73\0\1\u02ea\106\0\1\u02eb\122\0\1\162"+
    "\75\0\1\u017f\134\0\1\u02ec\105\0\1\u02ed\70\0\1\u02ee"+
    "\103\0\1\u02ef\123\0\1\u0180\72\0\1\u02f0\124\0\1\u02f1"+
    "\110\0\1\u02f2\4\0\1\u02f3\116\0\1\u02f4\72\0\1\u02f5"+
    "\112\0\1\u02f6\103\0\1\u02f7\77\0\1\u0173\2\0\1\u02b3"+
    "\2\0\1\u02f8\3\0\1\u02f9\4\0\1\u02fa\70\0\1\u02fb"+
    "\12\0\1\u02fc\112\0\1\u0118\103\0\1\u02fd\50\0\2\u02fe"+
    "\1\40\1\0\5\u02fe\1\0\1\u02fe\6\0\3\u02fe\3\0"+
    "\1\40\4\0\1\u02fe\3\0\1\u02fe\11\0\1\u02fe\4\0"+
    "\1\u02fe\6\0\1\u02fe\21\0\1\u02ff\1\37\1\40\2\0"+
    "\3\u02ff\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\u02ff\6\0\1\40\66\0\1\u0300"+
    "\71\0\1\u01fc\1\u0301\117\0\1\174\107\0\1\u0302\75\0"+
    "\1\u0303\111\0\1\u0304\106\0\1\u0305\120\0\1\u0306\104\0"+
    "\1\u0307\76\0\1\123\24\0\1\54\63\0\1\u0308\116\0"+
    "\1\216\105\0\1\u0309\113\0\1\u030a\107\0\1\u030b\111\0"+
    "\1\u01a7\107\0\1\54\76\0\1\u0246\12\0\1\u030c\112\0"+
    "\1\u030d\77\0\1\u030e\73\0\1\u030f\107\0\1\u0310\11\0"+
    "\1\u0311\2\0\1\u01c1\1\u0312\74\0\1\123\20\0\1\u01c0"+
    "\1\0\1\54\1\0\1\54\60\0\1\u0173\107\0\1\u0313"+
    "\107\0\1\u0314\112\0\1\u0315\112\0\1\u0316\116\0\1\u0317"+
    "\77\0\1\u0318\6\0\1\54\1\u0319\105\0\1\u031a\110\0"+
    "\1\u031b\101\0\1\u031c\100\0\1\u031d\111\0\1\u031e\11\0"+
    "\1\u031f\11\0\1\u0320\76\0\1\u0321\111\0\1\u01b3\6\0"+
    "\1\u01f3\75\0\1\u0322\101\0\1\u0246\6\0\1\u028c\3\0"+
    "\1\u030c\72\0\1\u0323\110\0\1\u0133\102\0\1\u0324\113\0"+
    "\1\u019f\112\0\1\u0325\117\0\1\u0326\71\0\1\u0327\122\0"+
    "\1\u0328\116\0\1\u0329\72\0\1\u032a\114\0\1\u032b\103\0"+
    "\1\u01b5\103\0\1\123\20\0\1\u032c\107\0\1\u0190\72\0"+
    "\1\u032d\126\0\1\u02e8\46\0\1\54\15\0\1\123\20\0"+
    "\1\u032e\63\0\1\u032f\1\0\1\u0330\1\0\1\u0243\1\0"+
    "\1\u0331\10\0\1\u0332\6\0\1\u0333\2\0\1\u0334\61\0"+
    "\1\123\1\u0335\17\0\1\u0336\22\0\1\54\43\0\1\123"+
    "\20\0\1\u0337\64\0\1\54\5\0\1\u0338\103\0\1\123"+
    "\20\0\1\u0339\67\0\1\u033a\107\0\1\u033b\6\0\1\u033c"+
    "\122\0\1\u033d\107\0\1\u033e\67\0\1\u01fc\17\0\1\u0320"+
    "\70\0\1\u033f\117\0\1\u0340\71\0\1\u0341\115\0\1\u0342"+
    "\107\0\1\u0343\105\0\1\u0344\126\0\1\u0345\22\0\1\54"+
    "\54\0\1\u0346\102\0\1\u0347\115\0\1\u0348\12\0\1\54"+
    "\63\0\1\u0243\10\0\1\u028c\104\0\1\u0349\10\0\1\u034a"+
    "\101\0\1\u01ac\105\0\1\u034b\110\0\1\364\111\0\1\u034c"+
    "\100\0\1\u034d\116\0\1\u034e\104\0\1\u034f\7\0\1\207"+
    "\70\0\1\u0350\105\0\1\u0167\23\0\1\u0351\112\0\1\u0352"+
    "\104\0\1\u0353\101\0\1\u0354\76\0\1\u01c1\107\0\1\u0355"+
    "\3\0\1\343\110\0\1\u0356\75\0\1\54\1\123\2\0"+
    "\1\u0357\15\0\1\u0358\72\0\1\u0359\126\0\1\174\64\0"+
    "\1\123\20\0\1\u035a\64\0\1\154\1\0\1\123\110\0"+
    "\1\u035b\116\0\1\u035c\1\u035d\74\0\1\u035e\122\0\1\u035f"+
    "\102\0\1\174\124\0\1\u0360\77\0\1\u0361\74\0\1\u0362"+
    "\107\0\1\u0363\1\0\1\123\20\0\1\u0364\64\0\1\u0365"+
    "\11\0\1\u0278\1\0\1\u0366\111\0\1\u0367\3\0\1\207"+
    "\2\0\1\u01ba\65\0\1\u0368\1\u0369\1\u036a\7\0\1\u036b"+
    "\4\0\1\u0329\5\0\1\u036c\60\0\1\135\3\0\1\u01ba"+
    "\6\0\1\u01bb\72\0\1\u036d\112\0\1\123\20\0\1\u036e"+
    "\131\0\1\174\42\0\1\u01de\113\0\1\u036f\117\0\1\u0370"+
    "\73\0\1\u0371\121\0\1\u0278\4\0\1\u0372\76\0\1\u0373"+
    "\101\0\1\u0374\115\0\1\u0375\114\0\1\u0376\106\0\1\u0377"+
    "\77\0\1\123\11\0\1\u0378\77\0\1\u0379\102\0\1\54"+
    "\107\0\1\u037a\140\0\1\u01de\113\0\1\364\61\0\1\u037b"+
    "\102\0\1\u037c\120\0\1\u037d\120\0\1\u037e\70\0\1\u037f"+
    "\127\0\1\u0380\70\0\1\u0263\115\0\1\u0381\101\0\1\u0382"+
    "\102\0\1\162\123\0\1\u0383\100\0\1\u0384\106\0\1\u01ee"+
    "\103\0\1\u0104\16\0\1\u0385\102\0\1\u0386\120\0\1\u0387"+
    "\3\0\1\54\77\0\1\u0388\106\0\1\u0389\111\0\1\u038a"+
    "\102\0\1\u0180\117\0\1\u038b\72\0\1\u038c\104\0\1\u038d"+
    "\116\0\1\u038e\105\0\1\u038f\122\0\1\u0390\107\0\1\u0391"+
    "\102\0\1\u0392\103\0\1\u0393\110\0\1\u0394\74\0\1\u025f"+
    "\123\0\1\u0395\100\0\1\u0396\125\0\1\u02da\42\0\2\u0397"+
    "\1\40\1\0\5\u0397\1\0\1\u0397\6\0\3\u0397\3\0"+
    "\1\40\4\0\1\u0397\3\0\1\u0397\11\0\1\u0397\4\0"+
    "\1\u0397\6\0\1\u0397\21\0\1\u0398\1\37\1\40\2\0"+
    "\3\u0398\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\u0398\6\0\1\40\105\0\1\u0399"+
    "\45\0\1\u039a\113\0\1\u039b\111\0\1\u039c\120\0\1\u039d"+
    "\76\0\1\u039e\114\0\1\u039f\104\0\1\u03a0\113\0\1\u02a9"+
    "\111\0\1\u03a1\70\0\1\u03a2\126\0\1\u03a3\110\0\1\u031e"+
    "\107\0\1\u03a4\2\0\1\u03a5\77\0\1\u03a6\75\0\1\u0235"+
    "\1\0\1\123\20\0\1\u03a7\1\0\1\364\66\0\1\u026a"+
    "\115\0\1\u01ee\110\0\1\u03a8\76\0\1\123\20\0\1\u03a9"+
    "\3\0\1\54\74\0\1\u03aa\101\0\1\u01de\7\0\1\u0265"+
    "\71\0\1\54\3\0\1\u03ab\116\0\1\u03ac\74\0\1\u03ad"+
    "\113\0\1\u02b9\116\0\1\u03ae\112\0\1\u0108\114\0\1\u01c0"+
    "\107\0\1\u03af\67\0\1\u014f\104\0\1\u03b0\115\0\1\u03b1"+
    "\135\0\1\54\65\0\1\u03b2\75\0\1\u0243\132\0\1\u03b3"+
    "\64\0\1\u03b4\135\0\1\u03b5\104\0\1\u03b6\66\0\1\123"+
    "\20\0\1\u03b7\3\0\1\54\60\0\1\u03b8\121\0\1\u03b9"+
    "\103\0\1\u03ba\112\0\1\u03bb\10\0\1\u03bc\71\0\1\u0235"+
    "\104\0\1\u02e8\112\0\1\u03bd\110\0\1\u03be\106\0\1\u027d"+
    "\122\0\1\u0311\107\0\1\373\74\0\1\u03bf\14\0\1\u02c0"+
    "\100\0\1\u03c0\100\0\1\u0173\104\0\1\u03c1\112\0\1\u03c2"+
    "\122\0\1\u03c3\116\0\1\u03c4\76\0\1\u03c5\117\0\1\u03c5"+
    "\63\0\1\u03c6\107\0\1\54\2\0\1\u03c7\104\0\1\u03c8"+
    "\1\0\1\123\117\0\1\u02c0\77\0\1\123\20\0\1\u03c9"+
    "\72\0\1\u03ca\117\0\1\u03cb\101\0\1\u03cc\121\0\1\u03bc"+
    "\73\0\1\u03cd\126\0\1\u03ce\74\0\1\u03cf\75\0\1\u03d0"+
    "\124\0\1\u03d1\100\0\1\u02e8\113\0\1\u03d2\75\0\1\u03d3"+
    "\113\0\1\u03d4\110\0\1\u03d5\114\0\1\275\101\0\1\u01f6"+
    "\110\0\1\u03d6\110\0\1\u03d7\114\0\1\u03d8\77\0\1\u03d9"+
    "\127\0\1\u03da\1\0\1\54\76\0\1\u0142\72\0\1\u03db"+
    "\14\0\1\u03dc\1\0\1\u034b\3\0\1\u02fa\2\0\1\u03dd"+
    "\65\0\1\u03de\120\0\1\u0205\1\0\1\u03df\3\0\1\u03e0"+
    "\2\0\1\u03e1\76\0\1\u03e2\107\0\1\u03e3\103\0\1\u03e4"+
    "\121\0\1\u0323\65\0\1\u03e5\11\0\1\u034b\107\0\1\u03e6"+
    "\75\0\1\u03e7\132\0\1\u03e8\63\0\1\u03e9\111\0\1\135"+
    "\10\0\1\u03ea\1\u02e5\1\223\1\0\1\u03c2\11\0\1\u03eb"+
    "\104\0\1\u03ec\74\0\1\u03ed\101\0\1\u03ee\117\0\1\u03ef"+
    "\103\0\1\u03f0\4\0\1\u0271\76\0\1\u03f1\116\0\1\u03f2"+
    "\77\0\1\u03f3\127\0\1\u03f4\1\0\1\54\102\0\1\u03f5"+
    "\102\0\1\u03f6\73\0\1\u03f7\134\0\1\u03f8\66\0\1\u03f9"+
    "\127\0\1\u03fa\107\0\1\u03fb\107\0\1\u03fc\77\0\1\u03fd"+
    "\101\0\1\u03fe\110\0\1\u03ff\7\0\1\174\72\0\1\u019e"+
    "\131\0\1\u0400\3\0\1\54\62\0\1\123\20\0\1\u0190"+
    "\67\0\1\u0401\111\0\1\u0402\114\0\1\u0104\5\0\1\u03f5"+
    "\107\0\1\u0403\112\0\1\u0404\63\0\1\u0263\113\0\1\u0100"+
    "\103\0\1\u0405\110\0\1\u0311\112\0\1\u0406\120\0\1\u01c7"+
    "\74\0\1\u0407\131\0\1\u0408\70\0\1\u0409\126\0\1\u040a"+
    "\64\0\1\u040b\132\0\1\u040c\71\0\1\u040d\116\0\1\u040e"+
    "\106\0\1\u040f\100\0\1\u0410\121\0\1\u0411\71\0\1\u0412"+
    "\114\0\1\u0413\106\0\1\u0414\111\0\1\u0301\113\0\1\u0415"+
    "\53\0\2\u0416\1\40\1\0\5\u0416\1\0\1\u0416\6\0"+
    "\3\u0416\3\0\1\40\4\0\1\u0416\3\0\1\u0416\11\0"+
    "\1\u0416\4\0\1\u0416\6\0\1\u0416\21\0\1\u0417\1\37"+
    "\1\40\2\0\3\u0417\1\40\1\44\1\45\6\0\1\40"+
    "\1\45\1\40\3\0\1\40\27\0\1\u0417\6\0\1\40"+
    "\106\0\1\u0418\57\0\1\u0419\107\0\1\u02d8\100\0\1\u041a"+
    "\107\0\1\u02d8\106\0\1\54\110\0\1\54\121\0\1\u0104"+
    "\77\0\1\346\113\0\1\u020b\103\0\1\u0263\113\0\1\u041b"+
    "\101\0\1\u041c\111\0\1\u041d\107\0\1\u0196\6\0\1\u0199"+
    "\76\0\1\u041e\102\0\1\u041f\16\0\1\u0420\107\0\1\u0421"+
    "\104\0\1\u015e\100\0\1\u0422\115\0\1\u019f\107\0\1\u01de"+
    "\102\0\1\u0423\114\0\1\u0424\110\0\1\u01c8\115\0\1\u0425"+
    "\116\0\1\u0426\61\0\1\123\20\0\1\u0427\64\0\1\u0428"+
    "\112\0\1\u0173\11\0\1\u0317\76\0\1\u019e\111\0\1\u0429"+
    "\126\0\1\u042a\100\0\1\u01b5\103\0\1\u042b\75\0\1\u042c"+
    "\117\0\1\u042d\103\0\1\u01b3\107\0\1\u042e\111\0\1\u042f"+
    "\114\0\1\u0430\100\0\1\371\110\0\1\u0431\110\0\1\u0432"+
    "\124\0\1\u0433\107\0\1\u0434\114\0\1\u0435\56\0\1\u011c"+
    "\122\0\1\u0436\1\0\1\u01c1\3\0\1\u028b\1\0\1\u02fa"+
    "\65\0\1\u0437\126\0\1\u0438\105\0\1\u01c1\115\0\1\u0439"+
    "\64\0\1\u043a\114\0\1\u043b\115\0\1\u01ac\102\0\1\u01de"+
    "\117\0\1\u043c\104\0\1\371\107\0\1\u02b4\77\0\1\u0116"+
    "\107\0\1\u043d\104\0\1\u043e\107\0\1\u043f\113\0\1\u0440"+
    "\125\0\1\u02fa\71\0\1\u026a\3\0\1\u0100\111\0\1\u0441"+
    "\100\0\1\u0442\2\0\1\u01ee\6\0\1\u0443\103\0\1\u0444"+
    "\110\0\1\u0445\107\0\1\u0446\105\0\1\u0447\124\0\1\364"+
    "\70\0\1\u011c\117\0\1\367\73\0\1\123\20\0\1\u0448"+
    "\120\0\1\u0449\76\0\1\u044a\100\0\1\u01c1\10\0\1\u019b"+
    "\105\0\1\u044b\101\0\1\u044c\102\0\1\u044d\115\0\1\u044e"+
    "\113\0\1\u044f\107\0\1\u0450\110\0\1\u0143\72\0\1\u03ef"+
    "\113\0\1\u0451\3\0\1\u0452\71\0\1\u0453\123\0\1\u0454"+
    "\120\0\1\u0455\65\0\1\u028c\127\0\1\u0456\64\0\1\u0457"+
    "\124\0\1\u0458\72\0\1\u0459\131\0\1\u045a\102\0\1\u045b"+
    "\120\0\1\u045c\65\0\1\u045d\106\0\1\u045e\107\0\1\u0265"+
    "\126\0\1\u045f\2\0\1\u0460\62\0\1\u03e2\132\0\1\u0461"+
    "\100\0\1\u0462\120\0\1\u0463\64\0\1\123\20\0\1\u0464"+
    "\65\0\1\u0465\122\0\1\u0466\77\0\1\u0467\117\0\1\u0468"+
    "\103\0\1\u0469\110\0\1\u046a\75\0\1\u046b\5\0\1\u046c"+
    "\5\0\1\u046d\6\0\1\u046e\65\0\1\u046f\106\0\1\u0470"+
    "\110\0\1\u0471\123\0\1\u0472\77\0\1\u0473\126\0\1\u0474"+
    "\67\0\1\u0475\130\0\1\u0476\110\0\1\u01c1\40\0\2\u0477"+
    "\1\40\1\0\5\u0477\1\0\1\u0477\6\0\3\u0477\3\0"+
    "\1\40\4\0\1\u0477\3\0\1\u0477\11\0\1\u0477\4\0"+
    "\1\u0477\6\0\1\u0477\21\0\1\u0478\1\37\1\40\2\0"+
    "\3\u0478\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\u0478\6\0\1\40\107\0\1\u0479"+
    "\44\0\1\u047a\124\0\1\u047b\105\0\1\u047c\72\0\1\174"+
    "\113\0\1\u047d\112\0\1\u047e\105\0\1\u047f\115\0\1\u0480"+
    "\100\0\1\u017a\130\0\1\u01de\66\0\1\u0481\103\0\1\u01b1"+
    "\112\0\1\123\20\0\1\u0482\70\0\1\u0483\130\0\1\u0484"+
    "\61\0\1\u0485\122\0\1\54\122\0\1\u0486\75\0\1\u0487"+
    "\102\0\1\u0488\131\0\1\u014f\64\0\1\u0489\105\0\1\u048a"+
    "\117\0\1\u048b\100\0\1\u048c\107\0\1\u048d\122\0\1\u048e"+
    "\105\0\1\u048f\77\0\1\u0108\107\0\1\u0490\115\0\1\u0173"+
    "\74\0\1\u0491\121\0\1\u0492\103\0\1\u015e\104\0\1\u02cb"+
    "\23\0\1\54\60\0\1\u0493\125\0\1\u01c1\105\0\1\u0494"+
    "\105\0\1\u0495\111\0\1\u0496\115\0\1\u0497\107\0\1\u0498"+
    "\65\0\1\u0499\107\0\1\u049a\114\0\1\u049b\117\0\1\u049c"+
    "\107\0\1\u01b1\104\0\1\u049d\75\0\1\u049e\120\0\1\u049f"+
    "\123\0\1\u04a0\77\0\1\u04a1\73\0\1\u04a2\120\0\1\u04a3"+
    "\75\0\1\u04a4\137\0\1\u01fc\56\0\1\u04a5\122\0\1\u04a6"+
    "\113\0\1\u04a7\70\0\1\u04a8\113\0\1\u0321\104\0\1\u04a9"+
    "\133\0\1\u04aa\75\0\1\u04ab\110\0\1\u04ac\74\0\1\u04ad"+
    "\122\0\1\u04ae\74\0\1\u04af\122\0\1\u04b0\73\0\1\u04b1"+
    "\122\0\1\u04b2\75\0\1\u04b3\110\0\1\u04b4\23\0\1\u04b5"+
    "\105\0\1\u04b6\105\0\1\u04b7\102\0\1\u01bb\101\0\1\u04b8"+
    "\103\0\1\123\27\0\1\54\71\0\1\u04b9\101\0\1\u04ba"+
    "\115\0\1\u04bb\105\0\1\u04bc\105\0\1\u04bd\77\0\1\u04be"+
    "\107\0\1\u04bf\107\0\1\u04c0\132\0\1\u04c1\107\0\1\u04c2"+
    "\107\0\1\u04c3\107\0\1\u04c4\100\0\1\u04c5\110\0\1\u04c6"+
    "\71\0\1\u02a9\131\0\1\u04c7\44\0\2\u04c8\1\40\1\0"+
    "\5\u04c8\1\0\1\u04c8\6\0\3\u04c8\3\0\1\40\4\0"+
    "\1\u04c8\3\0\1\u04c8\11\0\1\u04c8\4\0\1\u04c8\6\0"+
    "\1\u04c8\21\0\1\u04c9\1\37\1\40\2\0\3\u04c9\1\40"+
    "\1\44\1\45\6\0\1\40\1\45\1\40\3\0\1\40"+
    "\27\0\1\u04c9\6\0\1\40\33\0\1\54\131\0\1\u025c"+
    "\101\0\1\343\102\0\1\u04ca\114\0\1\u04cb\107\0\1\u04cc"+
    "\117\0\1\u0108\100\0\1\343\6\0\1\u04cd\123\0\1\u01c1"+
    "\42\0\1\u02d8\134\0\1\u04ce\114\0\1\u04cf\115\0\1\u04d0"+
    "\101\0\1\u04d1\115\0\1\u04d2\76\0\1\147\75\0\1\271"+
    "\120\0\1\u0108\102\0\1\u04d3\134\0\1\346\71\0\1\u04d4"+
    "\77\0\1\u04d5\104\0\1\u04d6\114\0\1\u0373\115\0\1\54"+
    "\11\0\1\54\116\0\1\u0323\55\0\1\123\20\0\1\u04d7"+
    "\72\0\1\147\100\0\1\u04d8\112\0\1\123\20\0\1\u04d9"+
    "\64\0\1\u04da\124\0\1\u014f\110\0\1\u04db\116\0\1\u04dc"+
    "\67\0\1\u04dd\117\0\1\u04de\106\0\1\u04df\107\0\1\u04e0"+
    "\73\0\1\u04e1\107\0\1\u04e2\107\0\1\u0231\110\0\1\u01b1"+
    "\123\0\1\u044f\115\0\1\u04e3\67\0\1\u04e4\111\0\1\u04e5"+
    "\105\0\1\u04e6\107\0\1\u04e7\120\0\1\u04e8\7\0\1\u04e9"+
    "\63\0\1\u02d8\123\0\1\u04ea\105\0\1\u04eb\103\0\1\u04ec"+
    "\105\0\1\u04ed\124\0\1\u01c1\111\0\1\u04ee\76\0\1\u04ef"+
    "\112\0\1\u04f0\100\0\1\u04f0\105\0\1\u04f1\124\0\1\u04f2"+
    "\100\0\1\u04f3\117\0\1\u04f4\110\0\1\u04f5\107\0\1\u04f6"+
    "\64\0\1\u04f7\122\0\1\u04f8\101\0\1\u017f\117\0\1\u017f"+
    "\103\0\1\u04f9\2\0\1\u04fa\105\0\1\u04fb\103\0\1\u04fc"+
    "\102\0\1\u04fd\13\0\1\u04c6\77\0\1\u04fe\113\0\1\u04ff"+
    "\111\0\1\u0500\102\0\1\u0501\113\0\1\u0502\120\0\1\u0503"+
    "\42\0\2\u0504\1\40\1\0\5\u0504\1\0\1\u0504\6\0"+
    "\3\u0504\3\0\1\40\4\0\1\u0504\3\0\1\u0504\11\0"+
    "\1\u0504\4\0\1\u0504\6\0\1\u0504\21\0\1\u0505\1\37"+
    "\1\40\2\0\3\u0505\1\40\1\44\1\45\6\0\1\40"+
    "\1\45\1\40\3\0\1\40\27\0\1\u0505\6\0\1\40"+
    "\50\0\1\u01b1\116\0\1\u015e\111\0\1\u0506\107\0\1\u0507"+
    "\105\0\1\154\100\0\1\u0508\101\0\1\u0509\3\0\1\u01aa"+
    "\6\0\1\u050a\1\u050b\1\u050c\5\0\1\u050d\2\0\1\u050e"+
    "\74\0\1\u028c\110\0\1\u050f\107\0\1\u0112\115\0\1\u0510"+
    "\113\0\1\u0511\76\0\1\u0512\115\0\1\u0513\110\0\1\u0514"+
    "\76\0\1\336\15\0\1\u01de\104\0\1\u0515\65\0\1\u0516"+
    "\127\0\1\u0517\107\0\1\u0518\67\0\1\u0519\103\0\1\u051a"+
    "\116\0\1\u051b\114\0\1\u04e6\103\0\1\364\125\0\1\u0320"+
    "\76\0\1\u051c\116\0\1\u051d\111\0\1\u051e\76\0\1\u051f"+
    "\101\0\1\u01b1\104\0\1\u0104\103\0\1\u0520\123\0\1\u0521"+
    "\113\0\1\u0522\76\0\1\u0523\120\0\1\u0524\2\0\1\u0525"+
    "\73\0\1\u0526\103\0\1\123\20\0\1\u02da\77\0\1\u0527"+
    "\116\0\1\u0528\121\0\1\u0529\103\0\1\u052a\64\0\1\u052b"+
    "\5\0\1\u052c\110\0\1\u052d\117\0\1\u052e\63\0\1\u052f"+
    "\107\0\1\u04bc\143\0\1\u0502\52\0\1\u0530\122\0\1\u017f"+
    "\100\0\1\u0531\107\0\1\u0532\104\0\1\u0533\107\0\1\u0534"+
    "\107\0\1\u0535\115\0\1\u0536\117\0\1\u02fc\47\0\2\u0537"+
    "\1\40\1\0\5\u0537\1\0\1\u0537\6\0\3\u0537\3\0"+
    "\1\40\4\0\1\u0537\3\0\1\u0537\11\0\1\u0537\4\0"+
    "\1\u0537\6\0\1\u0537\21\0\1\u0538\1\37\1\40\2\0"+
    "\3\u0538\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\u0538\6\0\1\40\47\0\1\u0539"+
    "\103\0\1\u053a\112\0\1\u053b\104\0\1\u026a\2\0\1\u053c"+
    "\103\0\1\u02d8\110\0\1\u053d\107\0\1\u053e\117\0\1\u053f"+
    "\107\0\1\u0540\103\0\1\u01bb\126\0\1\u0541\72\0\1\u0542"+
    "\100\0\1\u0543\120\0\1\250\127\0\1\u0544\74\0\1\u0545"+
    "\104\0\1\u0546\113\0\1\u0547\111\0\1\u0548\103\0\1\u0549"+
    "\116\0\1\u054a\107\0\1\u054b\120\0\1\u054c\64\0\1\u054d"+
    "\101\0\1\u054e\140\0\1\u054f\55\0\1\123\20\0\1\u0550"+
    "\102\0\1\u0551\75\0\1\u0552\107\0\1\u0553\115\0\1\u0554"+
    "\101\0\1\u0555\107\0\1\u0556\125\0\1\u0557\115\0\1\u0558"+
    "\57\0\1\u020b\113\0\1\u0559\103\0\1\u055a\112\0\1\u055b"+
    "\104\0\1\u055c\115\0\1\u055d\126\0\1\u055e\74\0\1\u055f"+
    "\102\0\1\u0560\116\0\1\u0561\106\0\1\u0562\75\0\1\u0563"+
    "\132\0\1\u0180\102\0\1\u017f\46\0\2\u0564\1\40\1\0"+
    "\5\u0564\1\0\1\u0564\6\0\3\u0564\3\0\1\40\4\0"+
    "\1\u0564\3\0\1\u0564\11\0\1\u0564\4\0\1\u0564\6\0"+
    "\1\u0564\21\0\1\u0565\1\37\1\40\2\0\3\u0565\1\40"+
    "\1\44\1\45\6\0\1\40\1\45\1\40\3\0\1\40"+
    "\27\0\1\u0565\6\0\1\40\50\0\1\u0566\107\0\1\u0567"+
    "\120\0\1\u01c8\102\0\1\u0568\120\0\1\u0569\121\0\1\u0340"+
    "\60\0\1\u056a\132\0\1\u056b\75\0\1\u056c\75\0\1\u056d"+
    "\106\0\1\u056e\107\0\1\u056f\116\0\1\u0570\102\0\1\u0571"+
    "\107\0\1\u0572\105\0\1\u0573\140\0\1\u01c1\100\0\1\u0574"+
    "\62\0\1\u0575\132\0\1\u0576\76\0\1\u0235\101\0\1\u0173"+
    "\130\0\1\u0466\46\0\1\54\142\0\1\u01de\67\0\1\u01c1"+
    "\126\0\1\u0577\105\0\1\u0578\72\0\1\u0579\123\0\1\147"+
    "\117\0\1\u057a\70\0\1\216\110\0\1\u0557\103\0\1\u0104"+
    "\142\0\1\u057b\73\0\1\u057c\112\0\1\u057d\70\0\1\u057e"+
    "\133\0\1\u057f\57\0\1\307\107\0\1\u0580\134\0\1\u0581"+
    "\67\0\1\u0582\60\0\2\u0583\1\40\1\0\5\u0583\1\0"+
    "\1\u0583\6\0\3\u0583\3\0\1\40\4\0\1\u0583\3\0"+
    "\1\u0583\11\0\1\u0583\4\0\1\u0583\6\0\1\u0583\21\0"+
    "\1\u0584\1\37\1\40\2\0\3\u0584\1\40\1\44\1\45"+
    "\6\0\1\40\1\45\1\40\3\0\1\40\27\0\1\u0584"+
    "\6\0\1\40\66\0\1\u0585\66\0\1\123\2\0\1\u0586"+
    "\105\0\1\u041c\116\0\1\u0587\103\0\1\u0588\107\0\1\u0589"+
    "\105\0\1\u058a\116\0\1\u01de\110\0\1\u058b\107\0\1\u058c"+
    "\111\0\1\u058d\114\0\1\u058e\76\0\1\u058f\103\0\1\u0590"+
    "\101\0\1\u0494\122\0\1\u0591\112\0\1\u0592\75\0\1\u0593"+
    "\102\0\1\u0594\110\0\1\147\121\0\1\u0595\114\0\1\u0104"+
    "\75\0\1\u0596\120\0\1\u0597\76\0\1\u0598\107\0\1\u0599"+
    "\125\0\1\u059a\67\0\1\u059b\104\0\1\u059c\65\0\2\u059d"+
    "\1\40\1\0\5\u059d\1\0\1\u059d\6\0\3\u059d\3\0"+
    "\1\40\4\0\1\u059d\3\0\1\u059d\11\0\1\u059d\4\0"+
    "\1\u059d\6\0\1\u059d\21\0\1\u059e\1\37\1\40\2\0"+
    "\3\u059e\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\u059e\6\0\1\40\46\0\1\u059f"+
    "\16\0\1\u02fa\65\0\1\154\112\0\1\u05a0\107\0\1\204"+
    "\117\0\1\u05a1\104\0\1\u0243\133\0\1\u05a2\52\0\1\u04de"+
    "\110\0\1\u0571\106\0\1\u0310\135\0\1\u05a3\101\0\1\u05a4"+
    "\103\0\1\u032d\100\0\1\u05a5\110\0\1\u05a6\107\0\1\u05a7"+
    "\116\0\1\u05a8\76\0\1\u05a9\111\0\1\u05aa\113\0\1\u05ab"+
    "\117\0\1\u017f\100\0\1\u05ac\101\0\1\302\121\0\1\u05ad"+
    "\47\0\2\u05ae\1\40\1\0\5\u05ae\1\0\1\u05ae\6\0"+
    "\3\u05ae\3\0\1\40\4\0\1\u05ae\3\0\1\u05ae\11\0"+
    "\1\u05ae\4\0\1\u05ae\6\0\1\u05ae\21\0\1\u05af\1\37"+
    "\1\40\2\0\3\u05af\1\40\1\44\1\45\6\0\1\40"+
    "\1\45\1\40\3\0\1\40\27\0\1\u05af\6\0\1\40"+
    "\65\0\1\u05b0\101\0\1\u0424\105\0\1\u03a0\120\0\1\u05b1"+
    "\111\0\1\u05b2\105\0\1\u05b3\100\0\1\u05b4\116\0\1\u05b5"+
    "\64\0\1\u0556\125\0\1\u05b6\105\0\1\u0247\105\0\1\u05b7"+
    "\75\0\1\u05b8\122\0\1\u05b9\102\0\1\u0581\57\0\2\u05ba"+
    "\1\40\1\0\5\u05ba\1\0\1\u05ba\6\0\3\u05ba\3\0"+
    "\1\40\4\0\1\u05ba\3\0\1\u05ba\11\0\1\u05ba\4\0"+
    "\1\u05ba\6\0\1\u05ba\21\0\1\u05bb\1\37\1\40\2\0"+
    "\3\u05bb\1\40\1\44\1\45\6\0\1\40\1\45\1\40"+
    "\3\0\1\40\27\0\1\u05bb\6\0\1\40\60\0\1\343"+
    "\117\0\1\u05bc\76\0\1\u05bd\120\0\1\u03e1\70\0\1\223"+
    "\102\0\1\u0173\125\0\1\u02e8\115\0\1\u05be\61\0\1\u05bf"+
    "\144\0\1\307\33\0\1\40\24\0\1\40\60\0\1\u05c0"+
    "\1\37\1\40\2\0\3\u05c0\1\40\1\44\1\45\6\0"+
    "\1\40\1\45\1\40\3\0\1\40\27\0\1\u05c0\6\0"+
    "\1\40\43\0\1\u05c1\121\0\1\u01a8\122\0\1\u05c2\105\0"+
    "\1\u05c3\42\0\1\u05c4\1\37\1\40\2\0\3\u05c4\1\40"+
    "\1\44\1\45\6\0\1\40\1\45\1\40\3\0\1\40"+
    "\27\0\1\u05c4\6\0\1\40\57\0\1\u0552\100\0\1\u05c5"+
    "\113\0\1\u05c6\54\0\1\u05c7\1\37\1\40\2\0\3\u05c7"+
    "\1\40\1\44\1\45\6\0\1\40\1\45\1\40\3\0"+
    "\1\40\27\0\1\u05c7\6\0\1\40\47\0\1\u05c8\115\0"+
    "\1\u05c9\53\0\1\u05ca\1\37\1\40\2\0\3\u05ca\1\40"+
    "\1\44\1\45\6\0\1\40\1\45\1\40\3\0\1\40"+
    "\27\0\1\u05ca\6\0\1\40\55\0\1\u05cb\110\0\1\307"+
    "\52\0\2\37\1\40\2\0\3\37\1\40\1\44\1\45"+
    "\6\0\1\40\1\45\1\40\3\0\1\40\27\0\1\37"+
    "\6\0\1\40\42\0\1\u05cc\110\0\1\u017c\56\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[105624];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\11\10\1\1\11\2\1\5\11\1\1\1\11"+
    "\3\1\1\11\2\1\1\11\2\1\1\11\1\0\3\1"+
    "\2\0\1\11\1\0\1\1\37\0\2\1\1\11\4\1"+
    "\1\0\1\1\1\0\1\11\175\0\1\11\2\1\275\0"+
    "\2\1\305\0\2\1\244\0\2\1\227\0\2\1\175\0"+
    "\2\1\137\0\2\1\120\0\1\1\73\0\1\1\62\0"+
    "\1\1\54\0\1\1\36\0\1\1\31\0\1\1\20\0"+
    "\1\1\13\0\1\1\4\0\1\1\3\0\1\1\2\0"+
    "\1\1\2\0\1\1\2\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1484];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    /**
     * Create an empty lexer, yyrset will be called later to reset and assign
     * the reader
     */
    public ClojureLexer() {
        super();
    }

    private Token token(TokenType type) {
        return new Token(type, yychar, yylength());
    }

    private Token token(TokenType type, int pairValue) {
        return new Token(type, yychar, yylength(), (byte)pairValue);
    }

    private static final byte PARAN     = 1;
    private static final byte BRACKET   = 2;
    private static final byte CURLY     = 3;



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public ClojureLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public ClojureLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 1796) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 7: 
          { return token(TokenType.OPERATOR, -PARAN);
          }
        case 19: break;
        case 4: 
          { return token(TokenType.NUMBER);
          }
        case 20: break;
        case 8: 
          { return token(TokenType.OPERATOR,  CURLY);
          }
        case 21: break;
        case 9: 
          { return token(TokenType.OPERATOR, -CURLY);
          }
        case 22: break;
        case 18: 
          { return new Token(TokenType.KEYWORD, yychar + 1, yylength() - 1);
          }
        case 23: break;
        case 12: 
          { tokenLength += yylength();
          }
        case 24: break;
        case 14: 
          { yybegin(YYINITIAL);
          }
        case 25: break;
        case 15: 
          { return token(TokenType.STRING);
          }
        case 26: break;
        case 5: 
          { yybegin(CHARLITERAL); 
                                    tokenStart = yychar; 
                                    tokenLength = 1;
          }
        case 27: break;
        case 16: 
          { return token(TokenType.TYPE);
          }
        case 28: break;
        case 11: 
          { return token(TokenType.OPERATOR, -BRACKET);
          }
        case 29: break;
        case 13: 
          { yybegin(YYINITIAL); 
                                     // length also includes the trailing quote
                                     return new Token(TokenType.STRING, tokenStart, tokenLength + 1);
          }
        case 30: break;
        case 6: 
          { return token(TokenType.OPERATOR,  PARAN);
          }
        case 31: break;
        case 3: 
          { return token(TokenType.IDENTIFIER);
          }
        case 32: break;
        case 17: 
          { tokenLength += 2;
          }
        case 33: break;
        case 10: 
          { return token(TokenType.OPERATOR,  BRACKET);
          }
        case 34: break;
        case 2: 
          { return token(TokenType.COMMENT);
          }
        case 35: break;
        case 1: 
          { 
          }
        case 36: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
              {
                return null;
              }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
